{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/directives/repeat-click/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import '../../utils/index.mjs';\nimport { isFunction } from '@vue/shared';\n\nconst REPEAT_INTERVAL = 100;\nconst REPEAT_DELAY = 600;\nconst vRepeatClick = {\n  beforeMount(el, binding) {\n    const value = binding.value;\n    const { interval = REPEAT_INTERVAL, delay = REPEAT_DELAY } = isFunction(value) ? {} : value;\n    let intervalId;\n    let delayId;\n    const handler = () => isFunction(value) ? value() : value.handler();\n    const clear = () => {\n      if (delayId) {\n        clearTimeout(delayId);\n        delayId = void 0;\n      }\n      if (intervalId) {\n        clearInterval(intervalId);\n        intervalId = void 0;\n      }\n    };\n    el.addEventListener(\"mousedown\", (evt) => {\n      if (evt.button !== 0)\n        return;\n      clear();\n      handler();\n      document.addEventListener(\"mouseup\", () => clear(), {\n        once: true\n      });\n      delayId = setTimeout(() => {\n        intervalId = setInterval(() => {\n          handler();\n        }, interval);\n      }, delay);\n    });\n  }\n};\n\nexport { REPEAT_DELAY, REPEAT_INTERVAL, vRepeatClick };\n//# sourceMappingURL=index.mjs.map\n","start":1680879309666,"end":1680879309888}]}
