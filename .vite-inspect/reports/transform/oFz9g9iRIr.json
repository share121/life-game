{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/drawer/src/drawer2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, computed, ref, resolveComponent, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, createElementVNode, mergeProps, withModifiers, normalizeClass, createElementBlock, renderSlot, toDisplayString, createCommentVNode, vShow } from 'vue';\nimport { Close } from '@element-plus/icons-vue';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport '../../focus-trap/index.mjs';\nimport '../../dialog/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { drawerProps, drawerEmits } from './drawer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElFocusTrap from '../../focus-trap/src/focus-trap.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { useDialog } from '../../dialog/src/use-dialog.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElDrawer\",\n  components: {\n    ElOverlay,\n    ElFocusTrap,\n    ElIcon,\n    Close\n  },\n  inheritAttrs: false,\n  props: drawerProps,\n  emits: drawerEmits,\n  setup(props, { slots }) {\n    useDeprecated({\n      scope: \"el-drawer\",\n      from: \"the title slot\",\n      replacement: \"the header slot\",\n      version: \"3.0.0\",\n      ref: \"https://element-plus.org/en-US/component/drawer.html#slots\"\n    }, computed(() => !!slots.title));\n    useDeprecated({\n      scope: \"el-drawer\",\n      from: \"custom-class\",\n      replacement: \"class\",\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/drawer.html#attributes\",\n      type: \"Attribute\"\n    }, computed(() => !!props.customClass));\n    const drawerRef = ref();\n    const focusStartRef = ref();\n    const ns = useNamespace(\"drawer\");\n    const { t } = useLocale();\n    const isHorizontal = computed(() => props.direction === \"rtl\" || props.direction === \"ltr\");\n    const drawerSize = computed(() => addUnit(props.size));\n    return {\n      ...useDialog(props, drawerRef),\n      drawerRef,\n      focusStartRef,\n      isHorizontal,\n      drawerSize,\n      ns,\n      t\n    };\n  }\n});\nconst _hoisted_1 = [\"aria-label\", \"aria-labelledby\", \"aria-describedby\"];\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = [\"aria-label\"];\nconst _hoisted_4 = [\"id\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_focus_trap = resolveComponent(\"el-focus-trap\");\n  const _component_el_overlay = resolveComponent(\"el-overlay\");\n  return openBlock(), createBlock(Teleport, {\n    to: \"body\",\n    disabled: !_ctx.appendToBody\n  }, [\n    createVNode(Transition, {\n      name: _ctx.ns.b(\"fade\"),\n      onAfterEnter: _ctx.afterEnter,\n      onAfterLeave: _ctx.afterLeave,\n      onBeforeLeave: _ctx.beforeLeave,\n      persisted: \"\"\n    }, {\n      default: withCtx(() => [\n        withDirectives(createVNode(_component_el_overlay, {\n          mask: _ctx.modal,\n          \"overlay-class\": _ctx.modalClass,\n          \"z-index\": _ctx.zIndex,\n          onClick: _ctx.onModalClick\n        }, {\n          default: withCtx(() => [\n            createVNode(_component_el_focus_trap, {\n              loop: \"\",\n              trapped: _ctx.visible,\n              \"focus-trap-el\": _ctx.drawerRef,\n              \"focus-start-el\": _ctx.focusStartRef,\n              onReleaseRequested: _ctx.onCloseRequested\n            }, {\n              default: withCtx(() => [\n                createElementVNode(\"div\", mergeProps({\n                  ref: \"drawerRef\",\n                  \"aria-modal\": \"true\",\n                  \"aria-label\": _ctx.title || void 0,\n                  \"aria-labelledby\": !_ctx.title ? _ctx.titleId : void 0,\n                  \"aria-describedby\": _ctx.bodyId\n                }, _ctx.$attrs, {\n                  class: [_ctx.ns.b(), _ctx.direction, _ctx.visible && \"open\", _ctx.customClass],\n                  style: _ctx.isHorizontal ? \"width: \" + _ctx.drawerSize : \"height: \" + _ctx.drawerSize,\n                  role: \"dialog\",\n                  onClick: _cache[1] || (_cache[1] = withModifiers(() => {\n                  }, [\"stop\"]))\n                }), [\n                  createElementVNode(\"span\", {\n                    ref: \"focusStartRef\",\n                    class: normalizeClass(_ctx.ns.e(\"sr-focus\")),\n                    tabindex: \"-1\"\n                  }, null, 2),\n                  _ctx.withHeader ? (openBlock(), createElementBlock(\"header\", {\n                    key: 0,\n                    class: normalizeClass(_ctx.ns.e(\"header\"))\n                  }, [\n                    !_ctx.$slots.title ? renderSlot(_ctx.$slots, \"header\", {\n                      key: 0,\n                      close: _ctx.handleClose,\n                      titleId: _ctx.titleId,\n                      titleClass: _ctx.ns.e(\"title\")\n                    }, () => [\n                      !_ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n                        key: 0,\n                        id: _ctx.titleId,\n                        role: \"heading\",\n                        class: normalizeClass(_ctx.ns.e(\"title\"))\n                      }, toDisplayString(_ctx.title), 11, _hoisted_2)) : createCommentVNode(\"v-if\", true)\n                    ]) : renderSlot(_ctx.$slots, \"title\", { key: 1 }, () => [\n                      createCommentVNode(\" DEPRECATED SLOT \")\n                    ]),\n                    _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n                      key: 2,\n                      \"aria-label\": _ctx.t(\"el.drawer.close\"),\n                      class: normalizeClass(_ctx.ns.e(\"close-btn\")),\n                      type: \"button\",\n                      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClose && _ctx.handleClose(...args))\n                    }, [\n                      createVNode(_component_el_icon, {\n                        class: normalizeClass(_ctx.ns.e(\"close\"))\n                      }, {\n                        default: withCtx(() => [\n                          createVNode(_component_close)\n                        ]),\n                        _: 1\n                      }, 8, [\"class\"])\n                    ], 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)\n                  ], 2)) : createCommentVNode(\"v-if\", true),\n                  _ctx.rendered ? (openBlock(), createElementBlock(\"div\", {\n                    key: 1,\n                    id: _ctx.bodyId,\n                    class: normalizeClass(_ctx.ns.e(\"body\"))\n                  }, [\n                    renderSlot(_ctx.$slots, \"default\")\n                  ], 10, _hoisted_4)) : createCommentVNode(\"v-if\", true),\n                  _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n                    key: 2,\n                    class: normalizeClass(_ctx.ns.e(\"footer\"))\n                  }, [\n                    renderSlot(_ctx.$slots, \"footer\")\n                  ], 2)) : createCommentVNode(\"v-if\", true)\n                ], 16, _hoisted_1)\n              ]),\n              _: 3\n            }, 8, [\"trapped\", \"focus-trap-el\", \"focus-start-el\", \"onReleaseRequested\"])\n          ]),\n          _: 3\n        }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [\n          [vShow, _ctx.visible]\n        ])\n      ]),\n      _: 3\n    }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])\n  ], 8, [\"disabled\"]);\n}\nvar Drawer = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/drawer/src/drawer.vue\"]]);\n\nexport { Drawer as default };\n//# sourceMappingURL=drawer2.mjs.map\n","start":1680880652176,"end":1680880653003}]}
