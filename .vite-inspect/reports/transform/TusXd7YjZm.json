{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/virtual-list/src/hooks/use-grid-wheel.mjs","transforms":[{"name":"vite:load-fallback","result":"import '../../../../utils/index.mjs';\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\n\nconst useGridWheel = ({ atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }, onWheelDelta) => {\n  let frameHandle = null;\n  let xOffset = 0;\n  let yOffset = 0;\n  const hasReachedEdge = (x, y) => {\n    const xEdgeReached = x <= 0 && atXStartEdge.value || x >= 0 && atXEndEdge.value;\n    const yEdgeReached = y <= 0 && atYStartEdge.value || y >= 0 && atYEndEdge.value;\n    return xEdgeReached && yEdgeReached;\n  };\n  const onWheel = (e) => {\n    cAF(frameHandle);\n    let x = e.deltaX;\n    let y = e.deltaY;\n    if (Math.abs(x) > Math.abs(y)) {\n      y = 0;\n    } else {\n      x = 0;\n    }\n    if (e.shiftKey && y !== 0) {\n      x = y;\n      y = 0;\n    }\n    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x, yOffset + y))\n      return;\n    xOffset += x;\n    yOffset += y;\n    e.preventDefault();\n    frameHandle = rAF(() => {\n      onWheelDelta(xOffset, yOffset);\n      xOffset = 0;\n      yOffset = 0;\n    });\n  };\n  return {\n    hasReachedEdge,\n    onWheel\n  };\n};\n\nexport { useGridWheel };\n//# sourceMappingURL=use-grid-wheel.mjs.map\n","start":1680878576165,"end":1680878576466}]}
