{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/transfer/src/composables/use-move.mjs","transforms":[{"name":"vite:load-fallback","result":"import '../../../../constants/index.mjs';\nimport { usePropsAlias } from './use-props-alias.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../../constants/event.mjs';\n\nconst useMove = (props, checkedState, emit) => {\n  const propsAlias = usePropsAlias(props);\n  const _emit = (value, direction, movedKeys) => {\n    emit(UPDATE_MODEL_EVENT, value);\n    emit(CHANGE_EVENT, value, direction, movedKeys);\n  };\n  const addToLeft = () => {\n    const currentValue = props.modelValue.slice();\n    checkedState.rightChecked.forEach((item) => {\n      const index = currentValue.indexOf(item);\n      if (index > -1) {\n        currentValue.splice(index, 1);\n      }\n    });\n    _emit(currentValue, \"left\", checkedState.rightChecked);\n  };\n  const addToRight = () => {\n    let currentValue = props.modelValue.slice();\n    const itemsToBeMoved = props.data.filter((item) => {\n      const itemKey = item[propsAlias.value.key];\n      return checkedState.leftChecked.includes(itemKey) && !props.modelValue.includes(itemKey);\n    }).map((item) => item[propsAlias.value.key]);\n    currentValue = props.targetOrder === \"unshift\" ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);\n    if (props.targetOrder === \"original\") {\n      currentValue = props.data.filter((item) => currentValue.includes(item[propsAlias.value.key])).map((item) => item[propsAlias.value.key]);\n    }\n    _emit(currentValue, \"right\", checkedState.leftChecked);\n  };\n  return {\n    addToLeft,\n    addToRight\n  };\n};\n\nexport { useMove };\n//# sourceMappingURL=use-move.mjs.map\n","start":1680879317905,"end":1680879318085}]}
