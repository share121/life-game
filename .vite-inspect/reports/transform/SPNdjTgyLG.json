{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/tabs/src/tabs.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, getCurrentInstance, ref, computed, watch, nextTick, provide, createVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tabsRootContextKey } from './constants.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  activeName: {\n    type: [String, Number]\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\nconst isPaneName = (value) => isString(value) || isNumber(value);\nconst tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name) => isPaneName(name),\n  tabClick: (pane, ev) => ev instanceof Event,\n  tabChange: (name) => isPaneName(name),\n  edit: (paneName, action) => [\"remove\", \"add\"].includes(action),\n  tabRemove: (name) => isPaneName(name),\n  tabAdd: () => true\n};\nvar Tabs = defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    var _a, _b;\n    const ns = useNamespace(\"tabs\");\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane\n    } = useOrderedChildren(getCurrentInstance(), \"ElTabPane\");\n    const nav$ = ref();\n    const currentName = ref((_b = (_a = props.modelValue) != null ? _a : props.activeName) != null ? _b : \"0\");\n    const changeCurrentName = (value) => {\n      currentName.value = value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"tabChange\", value);\n    };\n    const setCurrentName = async (value) => {\n      var _a2, _b2, _c;\n      if (currentName.value === value || isUndefined(value))\n        return;\n      try {\n        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));\n        if (canLeave !== false) {\n          changeCurrentName(value);\n          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);\n        }\n      } catch (e) {\n      }\n    };\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled)\n        return;\n      setCurrentName(tabName);\n      emit(\"tabClick\", tab, event);\n    };\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled || isUndefined(pane.props.name))\n        return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n    const handleTabAdd = () => {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n    useDeprecated({\n      from: '\"activeName\"',\n      replacement: '\"model-value\" or \"v-model\"',\n      scope: \"ElTabs\",\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/tabs.html#attributes\",\n      type: \"Attribute\"\n    }, computed(() => !!props.activeName));\n    watch(() => props.activeName, (modelValue) => setCurrentName(modelValue));\n    watch(() => props.modelValue, (modelValue) => setCurrentName(modelValue));\n    watch(currentName, async () => {\n      var _a2;\n      await nextTick();\n      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n    });\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane\n    });\n    expose({\n      currentName\n    });\n    return () => {\n      const newButton = props.editable || props.addable ? createVNode(\"span\", {\n        \"class\": ns.e(\"new-tab\"),\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": (ev) => {\n          if (ev.code === EVENT_CODE.enter)\n            handleTabAdd();\n        }\n      }, [createVNode(ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        default: () => [createVNode(Plus, null, null)]\n      })]) : null;\n      const header = createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), ns.is(props.tabPosition)]\n      }, [newButton, createVNode(TabNav, {\n        \"ref\": nav$,\n        \"currentName\": currentName.value,\n        \"editable\": props.editable,\n        \"type\": props.type,\n        \"panes\": panes.value,\n        \"stretch\": props.stretch,\n        \"onTabClick\": handleTabClick,\n        \"onTabRemove\": handleTabRemove\n      }, null)]);\n      const panels = createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [renderSlot(slots, \"default\")]);\n      return createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), {\n          [ns.m(\"card\")]: props.type === \"card\",\n          [ns.m(\"border-card\")]: props.type === \"border-card\"\n        }]\n      }, [...props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header]]);\n    };\n  }\n});\n\nexport { Tabs as default, tabsEmits, tabsProps };\n//# sourceMappingURL=tabs.mjs.map\n","start":1680879308778,"end":1680879309121}]}
