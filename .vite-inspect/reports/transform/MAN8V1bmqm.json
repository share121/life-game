{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/tree-v2/src/composables/useFilter.mjs","transforms":[{"name":"vite:load-fallback","result":"import { ref, computed } from 'vue';\nimport { isFunction } from '@vue/shared';\n\nfunction useFilter(props, tree) {\n  const hiddenNodeKeySet = ref(/* @__PURE__ */ new Set([]));\n  const hiddenExpandIconKeySet = ref(/* @__PURE__ */ new Set([]));\n  const filterable = computed(() => {\n    return isFunction(props.filterMethod);\n  });\n  function doFilter(query) {\n    var _a;\n    if (!filterable.value) {\n      return;\n    }\n    const expandKeySet = /* @__PURE__ */ new Set();\n    const hiddenExpandIconKeys = hiddenExpandIconKeySet.value;\n    const hiddenKeys = hiddenNodeKeySet.value;\n    const family = [];\n    const nodes = ((_a = tree.value) == null ? void 0 : _a.treeNodes) || [];\n    const filter = props.filterMethod;\n    hiddenKeys.clear();\n    function traverse(nodes2) {\n      nodes2.forEach((node) => {\n        family.push(node);\n        if (filter == null ? void 0 : filter(query, node.data)) {\n          family.forEach((member) => {\n            expandKeySet.add(member.key);\n          });\n        } else if (node.isLeaf) {\n          hiddenKeys.add(node.key);\n        }\n        const children = node.children;\n        if (children) {\n          traverse(children);\n        }\n        if (!node.isLeaf) {\n          if (!expandKeySet.has(node.key)) {\n            hiddenKeys.add(node.key);\n          } else if (children) {\n            let allHidden = true;\n            for (const childNode of children) {\n              if (!hiddenKeys.has(childNode.key)) {\n                allHidden = false;\n                break;\n              }\n            }\n            if (allHidden) {\n              hiddenExpandIconKeys.add(node.key);\n            } else {\n              hiddenExpandIconKeys.delete(node.key);\n            }\n          }\n        }\n        family.pop();\n      });\n    }\n    traverse(nodes);\n    return expandKeySet;\n  }\n  function isForceHiddenExpandIcon(node) {\n    return hiddenExpandIconKeySet.value.has(node.key);\n  }\n  return {\n    hiddenExpandIconKeySet,\n    hiddenNodeKeySet,\n    doFilter,\n    isForceHiddenExpandIcon\n  };\n}\n\nexport { useFilter };\n//# sourceMappingURL=useFilter.mjs.map\n","start":1680879320683,"end":1680879320880}]}
