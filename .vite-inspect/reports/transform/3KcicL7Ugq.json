{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/table-v2/src/composables/use-data.mjs","transforms":[{"name":"vite:load-fallback","result":"import { ref, computed, unref, watch } from 'vue';\n\nconst useData = (props, { expandedRowKeys, lastRenderedRowIndex, resetAfterIndex }) => {\n  const depthMap = ref({});\n  const flattenedData = computed(() => {\n    const depths = {};\n    const { data: data2, rowKey } = props;\n    const _expandedRowKeys = unref(expandedRowKeys);\n    if (!_expandedRowKeys || !_expandedRowKeys.length)\n      return data2;\n    const array = [];\n    const keysSet = /* @__PURE__ */ new Set();\n    _expandedRowKeys.forEach((x) => keysSet.add(x));\n    let copy = data2.slice();\n    copy.forEach((x) => depths[x[rowKey]] = 0);\n    while (copy.length > 0) {\n      const item = copy.shift();\n      array.push(item);\n      if (keysSet.has(item[rowKey]) && Array.isArray(item.children) && item.children.length > 0) {\n        copy = [...item.children, ...copy];\n        item.children.forEach((child) => depths[child[rowKey]] = depths[item[rowKey]] + 1);\n      }\n    }\n    depthMap.value = depths;\n    return array;\n  });\n  const data = computed(() => {\n    const { data: data2, expandColumnKey } = props;\n    return expandColumnKey ? unref(flattenedData) : data2;\n  });\n  watch(data, (val, prev) => {\n    if (val !== prev) {\n      lastRenderedRowIndex.value = -1;\n      resetAfterIndex(0, true);\n    }\n  });\n  return {\n    data,\n    depthMap\n  };\n};\n\nexport { useData };\n//# sourceMappingURL=use-data.mjs.map\n","start":1680879317736,"end":1680879317977}]}
