{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/notification/src/notification2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, computed, onMounted, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, toDisplayString, renderSlot, createElementBlock, Fragment, vShow, withModifiers, createVNode } from 'vue';\nimport { useTimeoutFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../config-provider/index.mjs';\nimport { notificationProps, notificationEmits } from './notification.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useGlobalComponentSettings } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { CloseComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"textContent\"];\nconst _hoisted_3 = { key: 0 };\nconst _hoisted_4 = [\"innerHTML\"];\nconst __default__ = defineComponent({\n  name: \"ElNotification\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: notificationProps,\n  emits: notificationEmits,\n  setup(__props, { expose }) {\n    const props = __props;\n    const { ns, zIndex } = useGlobalComponentSettings(\"notification\");\n    const { nextZIndex, currentZIndex } = zIndex;\n    const { Close } = CloseComponents;\n    const visible = ref(false);\n    let timer = void 0;\n    const typeClass = computed(() => {\n      const type = props.type;\n      return type && TypeComponentsMap[props.type] ? ns.m(type) : \"\";\n    });\n    const iconComponent = computed(() => {\n      if (!props.type)\n        return props.icon;\n      return TypeComponentsMap[props.type] || props.icon;\n    });\n    const horizontalClass = computed(() => props.position.endsWith(\"right\") ? \"right\" : \"left\");\n    const verticalProperty = computed(() => props.position.startsWith(\"top\") ? \"top\" : \"bottom\");\n    const positionStyle = computed(() => {\n      return {\n        [verticalProperty.value]: `${props.offset}px`,\n        zIndex: currentZIndex.value\n      };\n    });\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n        ({ stop: timer } = useTimeoutFn(() => {\n          if (visible.value)\n            close();\n        }, props.duration));\n      }\n    }\n    function clearTimer() {\n      timer == null ? void 0 : timer();\n    }\n    function close() {\n      visible.value = false;\n    }\n    function onKeydown({ code }) {\n      if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {\n        clearTimer();\n      } else if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n    onMounted(() => {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    useEventListener(document, \"keydown\", onKeydown);\n    expose({\n      visible,\n      close\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: _cache[1] || (_cache[1] = ($event) => _ctx.$emit(\"destroy\")),\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [\n          withDirectives(createElementVNode(\"div\", {\n            id: _ctx.id,\n            class: normalizeClass([unref(ns).b(), _ctx.customClass, unref(horizontalClass)]),\n            style: normalizeStyle(unref(positionStyle)),\n            role: \"alert\",\n            onMouseenter: clearTimer,\n            onMouseleave: startTimer,\n            onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onClick && _ctx.onClick(...args))\n          }, [\n            unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n              key: 0,\n              class: normalizeClass([unref(ns).e(\"icon\"), unref(typeClass)])\n            }, {\n              default: withCtx(() => [\n                (openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))\n              ]),\n              _: 1\n            }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true),\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"group\"))\n            }, [\n              createElementVNode(\"h2\", {\n                class: normalizeClass(unref(ns).e(\"title\")),\n                textContent: toDisplayString(_ctx.title)\n              }, null, 10, _hoisted_2),\n              withDirectives(createElementVNode(\"div\", {\n                class: normalizeClass(unref(ns).e(\"content\")),\n                style: normalizeStyle(!!_ctx.title ? void 0 : { margin: 0 })\n              }, [\n                renderSlot(_ctx.$slots, \"default\", {}, () => [\n                  !_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", _hoisted_3, toDisplayString(_ctx.message), 1)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [\n                    createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"),\n                    createElementVNode(\"p\", { innerHTML: _ctx.message }, null, 8, _hoisted_4)\n                  ], 2112))\n                ])\n              ], 6), [\n                [vShow, _ctx.message]\n              ]),\n              _ctx.showClose ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                class: normalizeClass(unref(ns).e(\"closeBtn\")),\n                onClick: withModifiers(close, [\"stop\"])\n              }, {\n                default: withCtx(() => [\n                  createVNode(unref(Close))\n                ]),\n                _: 1\n              }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)\n            ], 2)\n          ], 46, _hoisted_1), [\n            [vShow, visible.value]\n          ])\n        ]),\n        _: 3\n      }, 8, [\"name\", \"onBeforeLeave\"]);\n    };\n  }\n});\nvar NotificationConstructor = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/notification/src/notification.vue\"]]);\n\nexport { NotificationConstructor as default };\n//# sourceMappingURL=notification2.mjs.map\n","start":1680880658792,"end":1680880659165}]}
