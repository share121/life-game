{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/cascader-panel/src/node2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, inject, computed, createElementVNode, resolveComponent, openBlock, createElementBlock, normalizeClass, createCommentVNode, createBlock, withModifiers, withCtx, createVNode, Fragment } from 'vue';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElRadio } from '../../radio/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { Check, Loading, ArrowRight } from '@element-plus/icons-vue';\nimport NodeContent from './node-content.mjs';\nimport { CASCADER_PANEL_INJECTION_KEY } from './types.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElCascaderNode\",\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent,\n    ElIcon,\n    Check,\n    Loading,\n    ArrowRight\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    menuId: String\n  },\n  emits: [\"expand\"],\n  setup(props, { emit }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const ns = useNamespace(\"cascader-node\");\n    const isHoverMenu = computed(() => panel.isHoverMenu);\n    const multiple = computed(() => panel.config.multiple);\n    const checkStrictly = computed(() => panel.config.checkStrictly);\n    const checkedNodeId = computed(() => {\n      var _a;\n      return (_a = panel.checkedNodes[0]) == null ? void 0 : _a.uid;\n    });\n    const isDisabled = computed(() => props.node.isDisabled);\n    const isLeaf = computed(() => props.node.isLeaf);\n    const expandable = computed(() => checkStrictly.value && !isLeaf.value || !isDisabled.value);\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode));\n    const inCheckedPath = computed(() => checkStrictly.value && panel.checkedNodes.some(isInPath));\n    const isInPath = (node) => {\n      var _a;\n      const { level, uid } = props.node;\n      return ((_a = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a.uid) === uid;\n    };\n    const doExpand = () => {\n      if (inExpandingPath.value)\n        return;\n      panel.expandNode(props.node);\n    };\n    const doCheck = (checked) => {\n      const { node } = props;\n      if (checked === node.checked)\n        return;\n      panel.handleCheckChange(node, checked);\n    };\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value)\n          doExpand();\n      });\n    };\n    const handleHoverExpand = (e) => {\n      if (!isHoverMenu.value)\n        return;\n      handleExpand();\n      !isLeaf.value && emit(\"expand\", e);\n    };\n    const handleExpand = () => {\n      const { node } = props;\n      if (!expandable.value || node.loading)\n        return;\n      node.loaded ? doExpand() : doLoad();\n    };\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value)\n        return;\n      if (isLeaf.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {\n        handleCheck(true);\n      } else {\n        handleExpand();\n      }\n    };\n    const handleSelectCheck = (checked) => {\n      if (checkStrictly.value) {\n        doCheck(checked);\n        if (props.node.loaded) {\n          doExpand();\n        }\n      } else {\n        handleCheck(checked);\n      }\n    };\n    const handleCheck = (checked) => {\n      if (!props.node.loaded) {\n        doLoad();\n      } else {\n        doCheck(checked);\n        !checkStrictly.value && doExpand();\n      }\n    };\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      ns,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck,\n      handleSelectCheck\n    };\n  }\n});\nconst _hoisted_1 = [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"];\nconst _hoisted_2 = /* @__PURE__ */ createElementVNode(\"span\", null, null, -1);\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_radio = resolveComponent(\"el-radio\");\n  const _component_check = resolveComponent(\"check\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  const _component_loading = resolveComponent(\"loading\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  return openBlock(), createElementBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : void 0,\n    class: normalizeClass([\n      _ctx.ns.b(),\n      _ctx.ns.is(\"selectable\", _ctx.checkStrictly),\n      _ctx.ns.is(\"active\", _ctx.node.checked),\n      _ctx.ns.is(\"disabled\", !_ctx.expandable),\n      _ctx.inExpandingPath && \"in-active-path\",\n      _ctx.inCheckedPath && \"in-checked-path\"\n    ]),\n    onMouseenter: _cache[2] || (_cache[2] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [\n    createCommentVNode(\" prefix \"),\n    _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n      key: 0,\n      \"model-value\": _ctx.node.checked,\n      indeterminate: _ctx.node.indeterminate,\n      disabled: _ctx.isDisabled,\n      onClick: _cache[0] || (_cache[0] = withModifiers(() => {\n      }, [\"stop\"])),\n      \"onUpdate:modelValue\": _ctx.handleSelectCheck\n    }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n      key: 1,\n      \"model-value\": _ctx.checkedNodeId,\n      label: _ctx.node.uid,\n      disabled: _ctx.isDisabled,\n      \"onUpdate:modelValue\": _ctx.handleSelectCheck,\n      onClick: _cache[1] || (_cache[1] = withModifiers(() => {\n      }, [\"stop\"]))\n    }, {\n      default: withCtx(() => [\n        createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"),\n        _hoisted_2\n      ]),\n      _: 1\n    }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass(_ctx.ns.e(\"prefix\"))\n    }, {\n      default: withCtx(() => [\n        createVNode(_component_check)\n      ]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true),\n    createCommentVNode(\" content \"),\n    createVNode(_component_node_content),\n    createCommentVNode(\" postfix \"),\n    !_ctx.isLeaf ? (openBlock(), createElementBlock(Fragment, { key: 3 }, [\n      _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.ns.is(\"loading\"), _ctx.ns.e(\"postfix\")])\n      }, {\n        default: withCtx(() => [\n          createVNode(_component_loading)\n        ]),\n        _: 1\n      }, 8, [\"class\"])) : (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([\"arrow-right\", _ctx.ns.e(\"postfix\")])\n      }, {\n        default: withCtx(() => [\n          createVNode(_component_arrow_right)\n        ]),\n        _: 1\n      }, 8, [\"class\"]))\n    ], 64)) : createCommentVNode(\"v-if\", true)\n  ], 42, _hoisted_1);\n}\nvar ElCascaderNode = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/node.vue\"]]);\n\nexport { ElCascaderNode as default };\n//# sourceMappingURL=node2.mjs.map\n","start":1680878576681,"end":1680878576887}]}
