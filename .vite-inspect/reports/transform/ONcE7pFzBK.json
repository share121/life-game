{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/src/views/HomeView.vue?vue&type=script&setup=true&lang.ts","transforms":[{"name":"vite:vue","result":"import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07cc02b0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onMousedown\", \"onMouseover\"]\n\nimport { useConfigStore } from '@/stores/config'\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\nconst { col, row, divWidth, divHeight, updateSpeed, isStart } = storeToRefs(useConfigStore())\nlet map: Ref<boolean[][]> = ref(\n  Array(row.value)\n    .fill([])\n    .map(() => Array(row.value).fill(false))\n)\n\n// 长宽自动调整\nwatch(\n  () => ({\n    col: unref(col),\n    row: unref(row)\n  }),\n  ({ col, row }) => {\n    if (map.value.length > row) {\n      map.value.splice(row - map.value.length)\n    } else if (map.value.length < row) {\n      map.value.push(...Array(row - map.value.length).fill(Array(col).fill(false)))\n    }\n    map.value.forEach((e) => {\n      if (e.length > col) {\n        e.splice(col - e.length)\n      } else if (e.length < col) {\n        e.push(...Array(col - e.length).fill(false))\n      }\n    })\n  }\n)\nfunction* nestArray<T extends any>(...arr: T[][]): IterableIterator<T[]> {\n  if (arr.length === 1) for (const i of arr[0]) yield [i]\n  else {\n    let tempArr: T[][] = []\n    const i = arr[0][0]\n    for (const j of nestArray(...arr.slice(1))) {\n      tempArr.push(j)\n      yield [i, ...j]\n    }\n    for (const i of arr[0].slice(1)) for (const j of tempArr) yield [i, ...j]\n  }\n}\nfunction getBrother<T>(arr: T[][], x: number, y: number) {\n  function get(x: number, y: number) {\n    try {\n      return unref(arr)[y][x]\n    } catch {\n      return\n    }\n  }\n  return [...nestArray([-1, 0, 1], [-1, 0, 1])]\n    .filter(([vx, vy]) => !(vx === 0 && vy === 0))\n    .map(([vx, vy]) => get(x + vx, y + vy))\n}\nwatch(isStart, function t() {\n  if (isStart.value) {\n    const newMap: boolean[][] = Array(row.value)\n      .fill([])\n      .map(() => Array(row.value).fill(false))\n    map.value.forEach((row, y) => {\n      row.forEach((val, x) => {\n        switch (getBrother(map.value, x, y).reduce((pre, cur) => pre + +(cur === true), 0)) {\n          case 2:\n            newMap[y][x] = val\n            break\n          case 3:\n            newMap[y][x] = true\n        }\n      })\n    })\n    map.value = newMap\n    setTimeout(t, unref(updateSpeed))\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"container\",\n    style: _normalizeStyle({\n      gridTemplateColumns: `repeat(${_unref(col)}, auto)`,\n      '--width': _unref(divWidth) + 'px',\n      '--height': _unref(divHeight) + 'px'\n    })\n  }, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(map), (row, y) => {\n      return (_openBlock(), _createElementBlock(_Fragment, null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (val, x) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass({ true: val }),\n            onMousedown: ($event: any) => (_unref(map)[y][x] = !_unref(map)[y][x]),\n            onMouseover: ($event: any) => ($event.buttons === 1 && (_unref(map)[y][x] = !_unref(map)[y][x]))\n          }, null, 42, _hoisted_1))\n        }), 256))\n      ], 64))\n    }), 256))\n  ], 4))\n}\n}\n\n})","start":1680879303887,"end":1680879303887},{"name":"vite:esbuild","result":"import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-07cc02b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onMousedown\", \"onMouseover\"];\nimport { useConfigStore } from \"@/stores/config\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const { col, row, divWidth, divHeight, updateSpeed, isStart } = storeToRefs(useConfigStore());\n    let map = ref(\n      Array(row.value).fill([]).map(() => Array(row.value).fill(false))\n    );\n    watch(\n      () => ({\n        col: unref(col),\n        row: unref(row)\n      }),\n      ({ col: col2, row: row2 }) => {\n        if (map.value.length > row2) {\n          map.value.splice(row2 - map.value.length);\n        } else if (map.value.length < row2) {\n          map.value.push(...Array(row2 - map.value.length).fill(Array(col2).fill(false)));\n        }\n        map.value.forEach((e) => {\n          if (e.length > col2) {\n            e.splice(col2 - e.length);\n          } else if (e.length < col2) {\n            e.push(...Array(col2 - e.length).fill(false));\n          }\n        });\n      }\n    );\n    function* nestArray(...arr) {\n      if (arr.length === 1)\n        for (const i of arr[0])\n          yield [i];\n      else {\n        let tempArr = [];\n        const i = arr[0][0];\n        for (const j of nestArray(...arr.slice(1))) {\n          tempArr.push(j);\n          yield [i, ...j];\n        }\n        for (const i2 of arr[0].slice(1))\n          for (const j of tempArr)\n            yield [i2, ...j];\n      }\n    }\n    function getBrother(arr, x, y) {\n      function get(x2, y2) {\n        try {\n          return unref(arr)[y2][x2];\n        } catch {\n          return;\n        }\n      }\n      return [...nestArray([-1, 0, 1], [-1, 0, 1])].filter(([vx, vy]) => !(vx === 0 && vy === 0)).map(([vx, vy]) => get(x + vx, y + vy));\n    }\n    watch(isStart, function t() {\n      if (isStart.value) {\n        const newMap = Array(row.value).fill([]).map(() => Array(row.value).fill(false));\n        map.value.forEach((row2, y) => {\n          row2.forEach((val, x) => {\n            switch (getBrother(map.value, x, y).reduce((pre, cur) => pre + +(cur === true), 0)) {\n              case 2:\n                newMap[y][x] = val;\n                break;\n              case 3:\n                newMap[y][x] = true;\n            }\n          });\n        });\n        map.value = newMap;\n        setTimeout(t, unref(updateSpeed));\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"container\",\n        style: _normalizeStyle({\n          gridTemplateColumns: `repeat(${_unref(col)}, auto)`,\n          \"--width\": _unref(divWidth) + \"px\",\n          \"--height\": _unref(divHeight) + \"px\"\n        })\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(map), (row2, y) => {\n          return _openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row2, (val, x) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: _normalizeClass({ true: val }),\n                onMousedown: ($event) => _unref(map)[y][x] = !_unref(map)[y][x],\n                onMouseover: ($event) => $event.buttons === 1 && (_unref(map)[y][x] = !_unref(map)[y][x])\n              }, null, 42, _hoisted_1);\n            }), 256))\n          ], 64);\n        }), 256))\n      ], 4);\n    };\n  }\n});\n","start":1680879303899,"end":1680879303922,"order":"normal"},{"name":"unplugin-auto-import","result":"import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-07cc02b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onMousedown\", \"onMouseover\"];\nimport { useConfigStore } from \"@/stores/config\";\n\nimport { storeToRefs } from 'pinia';\nimport { ref, watch, unref } from 'vue';\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const { col, row, divWidth, divHeight, updateSpeed, isStart } = storeToRefs(useConfigStore());\n    let map = ref(\n      Array(row.value).fill([]).map(() => Array(row.value).fill(false))\n    );\n    watch(\n      () => ({\n        col: unref(col),\n        row: unref(row)\n      }),\n      ({ col: col2, row: row2 }) => {\n        if (map.value.length > row2) {\n          map.value.splice(row2 - map.value.length);\n        } else if (map.value.length < row2) {\n          map.value.push(...Array(row2 - map.value.length).fill(Array(col2).fill(false)));\n        }\n        map.value.forEach((e) => {\n          if (e.length > col2) {\n            e.splice(col2 - e.length);\n          } else if (e.length < col2) {\n            e.push(...Array(col2 - e.length).fill(false));\n          }\n        });\n      }\n    );\n    function* nestArray(...arr) {\n      if (arr.length === 1)\n        for (const i of arr[0])\n          yield [i];\n      else {\n        let tempArr = [];\n        const i = arr[0][0];\n        for (const j of nestArray(...arr.slice(1))) {\n          tempArr.push(j);\n          yield [i, ...j];\n        }\n        for (const i2 of arr[0].slice(1))\n          for (const j of tempArr)\n            yield [i2, ...j];\n      }\n    }\n    function getBrother(arr, x, y) {\n      function get(x2, y2) {\n        try {\n          return unref(arr)[y2][x2];\n        } catch {\n          return;\n        }\n      }\n      return [...nestArray([-1, 0, 1], [-1, 0, 1])].filter(([vx, vy]) => !(vx === 0 && vy === 0)).map(([vx, vy]) => get(x + vx, y + vy));\n    }\n    watch(isStart, function t() {\n      if (isStart.value) {\n        const newMap = Array(row.value).fill([]).map(() => Array(row.value).fill(false));\n        map.value.forEach((row2, y) => {\n          row2.forEach((val, x) => {\n            switch (getBrother(map.value, x, y).reduce((pre, cur) => pre + +(cur === true), 0)) {\n              case 2:\n                newMap[y][x] = val;\n                break;\n              case 3:\n                newMap[y][x] = true;\n            }\n          });\n        });\n        map.value = newMap;\n        setTimeout(t, unref(updateSpeed));\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"container\",\n        style: _normalizeStyle({\n          gridTemplateColumns: `repeat(${_unref(col)}, auto)`,\n          \"--width\": _unref(divWidth) + \"px\",\n          \"--height\": _unref(divHeight) + \"px\"\n        })\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(map), (row2, y) => {\n          return _openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row2, (val, x) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: _normalizeClass({ true: val }),\n                onMousedown: ($event) => _unref(map)[y][x] = !_unref(map)[y][x],\n                onMouseover: ($event) => $event.buttons === 1 && (_unref(map)[y][x] = !_unref(map)[y][x])\n              }, null, 42, _hoisted_1);\n            }), 256))\n          ], 64);\n        }), 256))\n      ], 4);\n    };\n  }\n});\n","start":1680879303922,"end":1680879303926,"order":"post"},{"name":"unplugin-vue-components","result":"/* unplugin-vue-components disabled */import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-07cc02b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onMousedown\", \"onMouseover\"];\nimport { useConfigStore } from \"@/stores/config\";\n\nimport { storeToRefs } from 'pinia';\nimport { ref, watch, unref } from 'vue';\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const { col, row, divWidth, divHeight, updateSpeed, isStart } = storeToRefs(useConfigStore());\n    let map = ref(\n      Array(row.value).fill([]).map(() => Array(row.value).fill(false))\n    );\n    watch(\n      () => ({\n        col: unref(col),\n        row: unref(row)\n      }),\n      ({ col: col2, row: row2 }) => {\n        if (map.value.length > row2) {\n          map.value.splice(row2 - map.value.length);\n        } else if (map.value.length < row2) {\n          map.value.push(...Array(row2 - map.value.length).fill(Array(col2).fill(false)));\n        }\n        map.value.forEach((e) => {\n          if (e.length > col2) {\n            e.splice(col2 - e.length);\n          } else if (e.length < col2) {\n            e.push(...Array(col2 - e.length).fill(false));\n          }\n        });\n      }\n    );\n    function* nestArray(...arr) {\n      if (arr.length === 1)\n        for (const i of arr[0])\n          yield [i];\n      else {\n        let tempArr = [];\n        const i = arr[0][0];\n        for (const j of nestArray(...arr.slice(1))) {\n          tempArr.push(j);\n          yield [i, ...j];\n        }\n        for (const i2 of arr[0].slice(1))\n          for (const j of tempArr)\n            yield [i2, ...j];\n      }\n    }\n    function getBrother(arr, x, y) {\n      function get(x2, y2) {\n        try {\n          return unref(arr)[y2][x2];\n        } catch {\n          return;\n        }\n      }\n      return [...nestArray([-1, 0, 1], [-1, 0, 1])].filter(([vx, vy]) => !(vx === 0 && vy === 0)).map(([vx, vy]) => get(x + vx, y + vy));\n    }\n    watch(isStart, function t() {\n      if (isStart.value) {\n        const newMap = Array(row.value).fill([]).map(() => Array(row.value).fill(false));\n        map.value.forEach((row2, y) => {\n          row2.forEach((val, x) => {\n            switch (getBrother(map.value, x, y).reduce((pre, cur) => pre + +(cur === true), 0)) {\n              case 2:\n                newMap[y][x] = val;\n                break;\n              case 3:\n                newMap[y][x] = true;\n            }\n          });\n        });\n        map.value = newMap;\n        setTimeout(t, unref(updateSpeed));\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"container\",\n        style: _normalizeStyle({\n          gridTemplateColumns: `repeat(${_unref(col)}, auto)`,\n          \"--width\": _unref(divWidth) + \"px\",\n          \"--height\": _unref(divHeight) + \"px\"\n        })\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(map), (row2, y) => {\n          return _openBlock(), _createElementBlock(_Fragment, null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row2, (val, x) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                class: _normalizeClass({ true: val }),\n                onMousedown: ($event) => _unref(map)[y][x] = !_unref(map)[y][x],\n                onMouseover: ($event) => $event.buttons === 1 && (_unref(map)[y][x] = !_unref(map)[y][x])\n              }, null, 42, _hoisted_1);\n            }), 256))\n          ], 64);\n        }), 256))\n      ], 4);\n    };\n  }\n});\n","start":1680879303926,"end":1680879303927,"order":"post"}]}
