{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/roving-focus-group/src/utils.mjs","transforms":[{"name":"vite:load-fallback","result":"import '../../../constants/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nconst getDirectionAwareKey = (key, dir) => {\n  if (dir !== \"rtl\")\n    return key;\n  switch (key) {\n    case EVENT_CODE.right:\n      return EVENT_CODE.left;\n    case EVENT_CODE.left:\n      return EVENT_CODE.right;\n    default:\n      return key;\n  }\n};\nconst getFocusIntent = (event, orientation, dir) => {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === \"vertical\" && [EVENT_CODE.left, EVENT_CODE.right].includes(key))\n    return void 0;\n  if (orientation === \"horizontal\" && [EVENT_CODE.up, EVENT_CODE.down].includes(key))\n    return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n};\nconst reorderArray = (array, atIdx) => {\n  return array.map((_, idx) => array[(idx + atIdx) % array.length]);\n};\nconst focusFirst = (elements) => {\n  const { activeElement: prevActive } = document;\n  for (const element of elements) {\n    if (element === prevActive)\n      return;\n    element.focus();\n    if (prevActive !== document.activeElement)\n      return;\n  }\n};\n\nexport { focusFirst, getFocusIntent, reorderArray };\n//# sourceMappingURL=utils.mjs.map\n","start":1680878575142,"end":1680878575301}]}
