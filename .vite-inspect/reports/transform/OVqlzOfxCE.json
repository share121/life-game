{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/slider/src/slider2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, reactive, computed, toRefs, provide, openBlock, createElementBlock, unref, normalizeClass, createElementVNode, normalizeStyle, createVNode, createBlock, createCommentVNode, Fragment, renderList } from 'vue';\nimport { ElInputNumber } from '../../input-number/index.mjs';\nimport '../../form/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { sliderContextKey } from './constants.mjs';\nimport { sliderProps, sliderEmits } from './slider.mjs';\nimport SliderButton from './button2.mjs';\nimport SliderMarker from './marker.mjs';\nimport './composables/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useSlide } from './composables/use-slide.mjs';\nimport { useStops } from './composables/use-stops.mjs';\nimport { useFormItemInputId } from '../../form/src/hooks/use-form-item.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useMarks } from './composables/use-marks.mjs';\nimport { useWatch } from './composables/use-watch.mjs';\nimport { useLifecycle } from './composables/use-lifecycle.mjs';\n\nconst _hoisted_1 = [\"id\", \"role\", \"aria-label\", \"aria-labelledby\"];\nconst _hoisted_2 = { key: 1 };\nconst __default__ = defineComponent({\n  name: \"ElSlider\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: sliderProps,\n  emits: sliderEmits,\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    const ns = useNamespace(\"slider\");\n    const { t } = useLocale();\n    const initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1\n    });\n    const {\n      elFormItem,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      minValue,\n      maxValue,\n      runwayStyle,\n      barStyle,\n      resetSize,\n      emitChange,\n      onSliderWrapperPrevent,\n      onSliderClick,\n      onSliderDown,\n      setFirstValue,\n      setSecondValue\n    } = useSlide(props, initData, emit);\n    const { stops, getStopStyle } = useStops(props, initData, minValue, maxValue);\n    const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {\n      formItemContext: elFormItem\n    });\n    const sliderWrapperSize = useFormSize();\n    const sliderInputSize = computed(() => props.inputSize || sliderWrapperSize.value);\n    const groupLabel = computed(() => {\n      return props.label || t(\"el.slider.defaultLabel\", {\n        min: props.min,\n        max: props.max\n      });\n    });\n    const firstButtonLabel = computed(() => {\n      if (props.range) {\n        return props.rangeStartLabel || t(\"el.slider.defaultRangeStartLabel\");\n      } else {\n        return groupLabel.value;\n      }\n    });\n    const firstValueText = computed(() => {\n      return props.formatValueText ? props.formatValueText(firstValue.value) : `${firstValue.value}`;\n    });\n    const secondButtonLabel = computed(() => {\n      return props.rangeEndLabel || t(\"el.slider.defaultRangeEndLabel\");\n    });\n    const secondValueText = computed(() => {\n      return props.formatValueText ? props.formatValueText(secondValue.value) : `${secondValue.value}`;\n    });\n    const sliderKls = computed(() => [\n      ns.b(),\n      ns.m(sliderWrapperSize.value),\n      ns.is(\"vertical\", props.vertical),\n      { [ns.m(\"with-input\")]: props.showInput }\n    ]);\n    const markList = useMarks(props);\n    useWatch(props, initData, minValue, maxValue, emit, elFormItem);\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimal = `${item}`.split(\".\")[1];\n        return decimal ? decimal.length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    const { sliderWrapper } = useLifecycle(props, initData, resetSize);\n    const { firstValue, secondValue, sliderSize } = toRefs(initData);\n    const updateDragging = (val) => {\n      initData.dragging = val;\n    };\n    provide(sliderContextKey, {\n      ...toRefs(props),\n      sliderSize,\n      disabled: sliderDisabled,\n      precision,\n      emitChange,\n      resetSize,\n      updateDragging\n    });\n    expose({\n      onSliderClick\n    });\n    return (_ctx, _cache) => {\n      var _a, _b;\n      return openBlock(), createElementBlock(\"div\", {\n        id: _ctx.range ? unref(inputId) : void 0,\n        ref_key: \"sliderWrapper\",\n        ref: sliderWrapper,\n        class: normalizeClass(unref(sliderKls)),\n        role: _ctx.range ? \"group\" : void 0,\n        \"aria-label\": _ctx.range && !unref(isLabeledByFormItem) ? unref(groupLabel) : void 0,\n        \"aria-labelledby\": _ctx.range && unref(isLabeledByFormItem) ? (_a = unref(elFormItem)) == null ? void 0 : _a.labelId : void 0,\n        onTouchstart: _cache[2] || (_cache[2] = (...args) => unref(onSliderWrapperPrevent) && unref(onSliderWrapperPrevent)(...args)),\n        onTouchmove: _cache[3] || (_cache[3] = (...args) => unref(onSliderWrapperPrevent) && unref(onSliderWrapperPrevent)(...args))\n      }, [\n        createElementVNode(\"div\", {\n          ref_key: \"slider\",\n          ref: slider,\n          class: normalizeClass([\n            unref(ns).e(\"runway\"),\n            { \"show-input\": _ctx.showInput && !_ctx.range },\n            unref(ns).is(\"disabled\", unref(sliderDisabled))\n          ]),\n          style: normalizeStyle(unref(runwayStyle)),\n          onMousedown: _cache[0] || (_cache[0] = (...args) => unref(onSliderDown) && unref(onSliderDown)(...args)),\n          onTouchstart: _cache[1] || (_cache[1] = (...args) => unref(onSliderDown) && unref(onSliderDown)(...args))\n        }, [\n          createElementVNode(\"div\", {\n            class: normalizeClass(unref(ns).e(\"bar\")),\n            style: normalizeStyle(unref(barStyle))\n          }, null, 6),\n          createVNode(SliderButton, {\n            id: !_ctx.range ? unref(inputId) : void 0,\n            ref_key: \"firstButton\",\n            ref: firstButton,\n            \"model-value\": unref(firstValue),\n            vertical: _ctx.vertical,\n            \"tooltip-class\": _ctx.tooltipClass,\n            placement: _ctx.placement,\n            role: \"slider\",\n            \"aria-label\": _ctx.range || !unref(isLabeledByFormItem) ? unref(firstButtonLabel) : void 0,\n            \"aria-labelledby\": !_ctx.range && unref(isLabeledByFormItem) ? (_b = unref(elFormItem)) == null ? void 0 : _b.labelId : void 0,\n            \"aria-valuemin\": _ctx.min,\n            \"aria-valuemax\": _ctx.range ? unref(secondValue) : _ctx.max,\n            \"aria-valuenow\": unref(firstValue),\n            \"aria-valuetext\": unref(firstValueText),\n            \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n            \"aria-disabled\": unref(sliderDisabled),\n            \"onUpdate:modelValue\": unref(setFirstValue)\n          }, null, 8, [\"id\", \"model-value\", \"vertical\", \"tooltip-class\", \"placement\", \"aria-label\", \"aria-labelledby\", \"aria-valuemin\", \"aria-valuemax\", \"aria-valuenow\", \"aria-valuetext\", \"aria-orientation\", \"aria-disabled\", \"onUpdate:modelValue\"]),\n          _ctx.range ? (openBlock(), createBlock(SliderButton, {\n            key: 0,\n            ref_key: \"secondButton\",\n            ref: secondButton,\n            \"model-value\": unref(secondValue),\n            vertical: _ctx.vertical,\n            \"tooltip-class\": _ctx.tooltipClass,\n            placement: _ctx.placement,\n            role: \"slider\",\n            \"aria-label\": unref(secondButtonLabel),\n            \"aria-valuemin\": unref(firstValue),\n            \"aria-valuemax\": _ctx.max,\n            \"aria-valuenow\": unref(secondValue),\n            \"aria-valuetext\": unref(secondValueText),\n            \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n            \"aria-disabled\": unref(sliderDisabled),\n            \"onUpdate:modelValue\": unref(setSecondValue)\n          }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"placement\", \"aria-label\", \"aria-valuemin\", \"aria-valuemax\", \"aria-valuenow\", \"aria-valuetext\", \"aria-orientation\", \"aria-disabled\", \"onUpdate:modelValue\"])) : createCommentVNode(\"v-if\", true),\n          _ctx.showStops ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [\n            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(stops), (item, key) => {\n              return openBlock(), createElementBlock(\"div\", {\n                key,\n                class: normalizeClass(unref(ns).e(\"stop\")),\n                style: normalizeStyle(unref(getStopStyle)(item))\n              }, null, 6);\n            }), 128))\n          ])) : createCommentVNode(\"v-if\", true),\n          unref(markList).length > 0 ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [\n            createElementVNode(\"div\", null, [\n              (openBlock(true), createElementBlock(Fragment, null, renderList(unref(markList), (item, key) => {\n                return openBlock(), createElementBlock(\"div\", {\n                  key,\n                  style: normalizeStyle(unref(getStopStyle)(item.position)),\n                  class: normalizeClass([unref(ns).e(\"stop\"), unref(ns).e(\"marks-stop\")])\n                }, null, 6);\n              }), 128))\n            ]),\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"marks\"))\n            }, [\n              (openBlock(true), createElementBlock(Fragment, null, renderList(unref(markList), (item, key) => {\n                return openBlock(), createBlock(unref(SliderMarker), {\n                  key,\n                  mark: item.mark,\n                  style: normalizeStyle(unref(getStopStyle)(item.position))\n                }, null, 8, [\"mark\", \"style\"]);\n              }), 128))\n            ], 2)\n          ], 64)) : createCommentVNode(\"v-if\", true)\n        ], 38),\n        _ctx.showInput && !_ctx.range ? (openBlock(), createBlock(unref(ElInputNumber), {\n          key: 0,\n          ref: \"input\",\n          \"model-value\": unref(firstValue),\n          class: normalizeClass(unref(ns).e(\"input\")),\n          step: _ctx.step,\n          disabled: unref(sliderDisabled),\n          controls: _ctx.showInputControls,\n          min: _ctx.min,\n          max: _ctx.max,\n          debounce: _ctx.debounce,\n          size: unref(sliderInputSize),\n          \"onUpdate:modelValue\": unref(setFirstValue),\n          onChange: unref(emitChange)\n        }, null, 8, [\"model-value\", \"class\", \"step\", \"disabled\", \"controls\", \"min\", \"max\", \"debounce\", \"size\", \"onUpdate:modelValue\", \"onChange\"])) : createCommentVNode(\"v-if\", true)\n      ], 42, _hoisted_1);\n    };\n  }\n});\nvar Slider = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/slider/src/slider.vue\"]]);\n\nexport { Slider as default };\n//# sourceMappingURL=slider2.mjs.map\n","start":1680878572201,"end":1680878572752}]}
