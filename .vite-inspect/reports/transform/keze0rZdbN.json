{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/dialog/src/dialog-content2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, inject, computed, openBlock, createElementBlock, unref, normalizeClass, normalizeStyle, createElementVNode, renderSlot, toDisplayString, createVNode, withCtx, createBlock, resolveDynamicComponent, createCommentVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../focus-trap/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { dialogInjectionKey } from './constants.mjs';\nimport { dialogContentProps, dialogContentEmits } from './dialog-content.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { CloseComponents } from '../../../utils/vue/icon.mjs';\nimport { FOCUS_TRAP_INJECTION_KEY } from '../../focus-trap/src/tokens.mjs';\nimport { composeRefs } from '../../../utils/vue/refs.mjs';\nimport { useDraggable } from '../../../hooks/use-draggable/index.mjs';\n\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = [\"id\"];\nconst __default__ = defineComponent({ name: \"ElDialogContent\" });\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: dialogContentProps,\n  emits: dialogContentEmits,\n  setup(__props) {\n    const props = __props;\n    const { t } = useLocale();\n    const { Close } = CloseComponents;\n    const { dialogRef, headerRef, bodyId, ns, style } = inject(dialogInjectionKey);\n    const { focusTrapRef } = inject(FOCUS_TRAP_INJECTION_KEY);\n    const composedDialogRef = composeRefs(focusTrapRef, dialogRef);\n    const draggable = computed(() => props.draggable);\n    useDraggable(dialogRef, headerRef, draggable);\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref: unref(composedDialogRef),\n        class: normalizeClass([\n          unref(ns).b(),\n          unref(ns).is(\"fullscreen\", _ctx.fullscreen),\n          unref(ns).is(\"draggable\", unref(draggable)),\n          unref(ns).is(\"align-center\", _ctx.alignCenter),\n          { [unref(ns).m(\"center\")]: _ctx.center },\n          _ctx.customClass\n        ]),\n        style: normalizeStyle(unref(style)),\n        tabindex: \"-1\"\n      }, [\n        createElementVNode(\"header\", {\n          ref_key: \"headerRef\",\n          ref: headerRef,\n          class: normalizeClass(unref(ns).e(\"header\"))\n        }, [\n          renderSlot(_ctx.$slots, \"header\", {}, () => [\n            createElementVNode(\"span\", {\n              role: \"heading\",\n              class: normalizeClass(unref(ns).e(\"title\"))\n            }, toDisplayString(_ctx.title), 3)\n          ]),\n          _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n            key: 0,\n            \"aria-label\": unref(t)(\"el.dialog.close\"),\n            class: normalizeClass(unref(ns).e(\"headerbtn\")),\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit(\"close\"))\n          }, [\n            createVNode(unref(ElIcon), {\n              class: normalizeClass(unref(ns).e(\"close\"))\n            }, {\n              default: withCtx(() => [\n                (openBlock(), createBlock(resolveDynamicComponent(_ctx.closeIcon || unref(Close))))\n              ]),\n              _: 1\n            }, 8, [\"class\"])\n          ], 10, _hoisted_1)) : createCommentVNode(\"v-if\", true)\n        ], 2),\n        createElementVNode(\"div\", {\n          id: unref(bodyId),\n          class: normalizeClass(unref(ns).e(\"body\"))\n        }, [\n          renderSlot(_ctx.$slots, \"default\")\n        ], 10, _hoisted_2),\n        _ctx.$slots.footer ? (openBlock(), createElementBlock(\"footer\", {\n          key: 0,\n          class: normalizeClass(unref(ns).e(\"footer\"))\n        }, [\n          renderSlot(_ctx.$slots, \"footer\")\n        ], 2)) : createCommentVNode(\"v-if\", true)\n      ], 6);\n    };\n  }\n});\nvar ElDialogContent = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog-content.vue\"]]);\n\nexport { ElDialogContent as default };\n//# sourceMappingURL=dialog-content2.mjs.map\n","start":1680880656988,"end":1680880657714}]}
