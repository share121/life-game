{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/config-provider/src/config-provider.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, watch, renderSlot } from 'vue';\nimport { provideGlobalConfig } from './hooks/use-global-config.mjs';\nimport { configProviderProps } from './config-provider-props.mjs';\n\nconst messageConfig = {};\nconst ConfigProvider = defineComponent({\n  name: \"ElConfigProvider\",\n  props: configProviderProps,\n  setup(props, { slots }) {\n    watch(() => props.message, (val) => {\n      Object.assign(messageConfig, val != null ? val : {});\n    }, { immediate: true, deep: true });\n    const config = provideGlobalConfig(props);\n    return () => renderSlot(slots, \"default\", { config: config == null ? void 0 : config.value });\n  }\n});\n\nexport { ConfigProvider as default, messageConfig };\n//# sourceMappingURL=config-provider.mjs.map\n","start":1680879307072,"end":1680879307529}]}
