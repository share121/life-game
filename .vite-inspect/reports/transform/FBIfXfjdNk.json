{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/carousel/src/carousel2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, computed, unref, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, Transition, withCtx, withDirectives, createVNode, vShow, createCommentVNode, renderSlot, Fragment, renderList, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { carouselProps, carouselEmits } from './carousel.mjs';\nimport { useCarousel } from './use-carousel.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _hoisted_1 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_2 = { key: 0 };\nconst COMPONENT_NAME = \"ElCarousel\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: carouselProps,\n  emits: carouselEmits,\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    const {\n      root,\n      activeIndex,\n      arrowDisplay,\n      hasLabel,\n      hover,\n      isCardType,\n      items,\n      handleButtonEnter,\n      handleButtonLeave,\n      handleIndicatorClick,\n      handleMouseEnter,\n      handleMouseLeave,\n      setActiveItem,\n      prev,\n      next,\n      throttledArrowClick,\n      throttledIndicatorHover\n    } = useCarousel(props, emit, COMPONENT_NAME);\n    const ns = useNamespace(\"carousel\");\n    const carouselClasses = computed(() => {\n      const classes = [ns.b(), ns.m(props.direction)];\n      if (unref(isCardType)) {\n        classes.push(ns.m(\"card\"));\n      }\n      return classes;\n    });\n    const indicatorsClasses = computed(() => {\n      const classes = [ns.e(\"indicators\"), ns.em(\"indicators\", props.direction)];\n      if (unref(hasLabel)) {\n        classes.push(ns.em(\"indicators\", \"labels\"));\n      }\n      if (props.indicatorPosition === \"outside\" || unref(isCardType)) {\n        classes.push(ns.em(\"indicators\", \"outside\"));\n      }\n      return classes;\n    });\n    expose({\n      setActiveItem,\n      prev,\n      next\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"root\",\n        ref: root,\n        class: normalizeClass(unref(carouselClasses)),\n        onMouseenter: _cache[6] || (_cache[6] = withModifiers((...args) => unref(handleMouseEnter) && unref(handleMouseEnter)(...args), [\"stop\"])),\n        onMouseleave: _cache[7] || (_cache[7] = withModifiers((...args) => unref(handleMouseLeave) && unref(handleMouseLeave)(...args), [\"stop\"]))\n      }, [\n        createElementVNode(\"div\", {\n          class: normalizeClass(unref(ns).e(\"container\")),\n          style: normalizeStyle({ height: _ctx.height })\n        }, [\n          unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n            key: 0,\n            name: \"carousel-arrow-left\",\n            persisted: \"\"\n          }, {\n            default: withCtx(() => [\n              withDirectives(createElementVNode(\"button\", {\n                type: \"button\",\n                class: normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"left\")]),\n                onMouseenter: _cache[0] || (_cache[0] = ($event) => unref(handleButtonEnter)(\"left\")),\n                onMouseleave: _cache[1] || (_cache[1] = (...args) => unref(handleButtonLeave) && unref(handleButtonLeave)(...args)),\n                onClick: _cache[2] || (_cache[2] = withModifiers(($event) => unref(throttledArrowClick)(unref(activeIndex) - 1), [\"stop\"]))\n              }, [\n                createVNode(unref(ElIcon), null, {\n                  default: withCtx(() => [\n                    createVNode(unref(ArrowLeft))\n                  ]),\n                  _: 1\n                })\n              ], 34), [\n                [\n                  vShow,\n                  (_ctx.arrow === \"always\" || unref(hover)) && (props.loop || unref(activeIndex) > 0)\n                ]\n              ])\n            ]),\n            _: 1\n          })) : createCommentVNode(\"v-if\", true),\n          unref(arrowDisplay) ? (openBlock(), createBlock(Transition, {\n            key: 1,\n            name: \"carousel-arrow-right\",\n            persisted: \"\"\n          }, {\n            default: withCtx(() => [\n              withDirectives(createElementVNode(\"button\", {\n                type: \"button\",\n                class: normalizeClass([unref(ns).e(\"arrow\"), unref(ns).em(\"arrow\", \"right\")]),\n                onMouseenter: _cache[3] || (_cache[3] = ($event) => unref(handleButtonEnter)(\"right\")),\n                onMouseleave: _cache[4] || (_cache[4] = (...args) => unref(handleButtonLeave) && unref(handleButtonLeave)(...args)),\n                onClick: _cache[5] || (_cache[5] = withModifiers(($event) => unref(throttledArrowClick)(unref(activeIndex) + 1), [\"stop\"]))\n              }, [\n                createVNode(unref(ElIcon), null, {\n                  default: withCtx(() => [\n                    createVNode(unref(ArrowRight))\n                  ]),\n                  _: 1\n                })\n              ], 34), [\n                [\n                  vShow,\n                  (_ctx.arrow === \"always\" || unref(hover)) && (props.loop || unref(activeIndex) < unref(items).length - 1)\n                ]\n              ])\n            ]),\n            _: 1\n          })) : createCommentVNode(\"v-if\", true),\n          renderSlot(_ctx.$slots, \"default\")\n        ], 6),\n        _ctx.indicatorPosition !== \"none\" ? (openBlock(), createElementBlock(\"ul\", {\n          key: 0,\n          class: normalizeClass(unref(indicatorsClasses))\n        }, [\n          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(items), (item, index) => {\n            return openBlock(), createElementBlock(\"li\", {\n              key: index,\n              class: normalizeClass([\n                unref(ns).e(\"indicator\"),\n                unref(ns).em(\"indicator\", _ctx.direction),\n                unref(ns).is(\"active\", index === unref(activeIndex))\n              ]),\n              onMouseenter: ($event) => unref(throttledIndicatorHover)(index),\n              onClick: withModifiers(($event) => unref(handleIndicatorClick)(index), [\"stop\"])\n            }, [\n              createElementVNode(\"button\", {\n                class: normalizeClass(unref(ns).e(\"button\"))\n              }, [\n                unref(hasLabel) ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(item.props.label), 1)) : createCommentVNode(\"v-if\", true)\n              ], 2)\n            ], 42, _hoisted_1);\n          }), 128))\n        ], 2)) : createCommentVNode(\"v-if\", true)\n      ], 34);\n    };\n  }\n});\nvar Carousel = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel.vue\"]]);\n\nexport { Carousel as default };\n//# sourceMappingURL=carousel2.mjs.map\n","start":1680880651097,"end":1680880651702}]}
