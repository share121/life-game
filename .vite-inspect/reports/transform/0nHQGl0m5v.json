{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/hooks/use-ordered-children/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { isVNode, shallowRef } from 'vue';\nimport '../../utils/index.mjs';\nimport { flattedChildren } from '../../utils/vue/vnode.mjs';\n\nconst getOrderedChildren = (vm, childComponentName, children) => {\n  const nodes = flattedChildren(vm.subTree).filter((n) => {\n    var _a;\n    return isVNode(n) && ((_a = n.type) == null ? void 0 : _a.name) === childComponentName && !!n.component;\n  });\n  const uids = nodes.map((n) => n.component.uid);\n  return uids.map((uid) => children[uid]).filter((p) => !!p);\n};\nconst useOrderedChildren = (vm, childComponentName) => {\n  const children = {};\n  const orderedChildren = shallowRef([]);\n  const addChild = (child) => {\n    children[child.uid] = child;\n    orderedChildren.value = getOrderedChildren(vm, childComponentName, children);\n  };\n  const removeChild = (uid) => {\n    delete children[uid];\n    orderedChildren.value = orderedChildren.value.filter((children2) => children2.uid !== uid);\n  };\n  return {\n    children: orderedChildren,\n    addChild,\n    removeChild\n  };\n};\n\nexport { useOrderedChildren };\n//# sourceMappingURL=index.mjs.map\n","start":1680879309985,"end":1680879311176}]}
