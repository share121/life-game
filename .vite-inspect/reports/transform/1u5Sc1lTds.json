{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/countdown/src/utils.mjs","transforms":[{"name":"vite:load-fallback","result":"import '../../../utils/index.mjs';\nimport { isNumber } from '@vueuse/core';\n\nconst timeUnits = [\n  [\"Y\", 1e3 * 60 * 60 * 24 * 365],\n  [\"M\", 1e3 * 60 * 60 * 24 * 30],\n  [\"D\", 1e3 * 60 * 60 * 24],\n  [\"H\", 1e3 * 60 * 60],\n  [\"m\", 1e3 * 60],\n  [\"s\", 1e3],\n  [\"S\", 1]\n];\nconst getTime = (value) => {\n  return isNumber(value) ? new Date(value).getTime() : value.valueOf();\n};\nconst formatTime = (timestamp, format) => {\n  let timeLeft = timestamp;\n  const escapeRegex = /\\[([^\\]]*)]/g;\n  const replacedText = timeUnits.reduce((current, [name, unit]) => {\n    const replaceRegex = new RegExp(`${name}+(?![^\\\\[\\\\]]*\\\\])`, \"g\");\n    if (replaceRegex.test(current)) {\n      const value = Math.floor(timeLeft / unit);\n      timeLeft -= value * unit;\n      return current.replace(replaceRegex, (match) => String(value).padStart(match.length, \"0\"));\n    }\n    return current;\n  }, format);\n  return replacedText.replace(escapeRegex, \"$1\");\n};\n\nexport { formatTime, getTime };\n//# sourceMappingURL=utils.mjs.map\n","start":1680878574426,"end":1680878575132}]}
