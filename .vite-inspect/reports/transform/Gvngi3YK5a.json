{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/hooks/use-lockscreen/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { isRef, watch, onScopeDispose } from 'vue';\nimport { computed } from '@vue/reactivity';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { useNamespace } from '../use-namespace/index.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { hasClass, removeClass, getStyle, addClass } from '../../utils/dom/style.mjs';\nimport { getScrollBarWidth } from '../../utils/dom/scroll.mjs';\n\nconst useLockscreen = (trigger, options = {}) => {\n  if (!isRef(trigger)) {\n    throwError(\"[useLockscreen]\", \"You need to pass a ref param to this function\");\n  }\n  const ns = options.ns || useNamespace(\"popup\");\n  const hiddenCls = computed(() => ns.bm(\"parent\", \"hidden\"));\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return;\n  }\n  let scrollBarWidth = 0;\n  let withoutHiddenClass = false;\n  let bodyWidth = \"0\";\n  const cleanup = () => {\n    setTimeout(() => {\n      removeClass(document == null ? void 0 : document.body, hiddenCls.value);\n      if (withoutHiddenClass && document) {\n        document.body.style.width = bodyWidth;\n      }\n    }, 200);\n  };\n  watch(trigger, (val) => {\n    if (!val) {\n      cleanup();\n      return;\n    }\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value);\n    if (withoutHiddenClass) {\n      bodyWidth = document.body.style.width;\n    }\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value);\n    const bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;\n    const bodyOverflowY = getStyle(document.body, \"overflowY\");\n    if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === \"scroll\") && withoutHiddenClass) {\n      document.body.style.width = `calc(100% - ${scrollBarWidth}px)`;\n    }\n    addClass(document.body, hiddenCls.value);\n  });\n  onScopeDispose(() => cleanup());\n};\n\nexport { useLockscreen };\n//# sourceMappingURL=index.mjs.map\n","start":1680878568188,"end":1680878568376}]}
