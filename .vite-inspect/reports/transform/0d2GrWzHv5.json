{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/tree-select/src/tree-select.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, computed, reactive, onMounted, h } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElSelect } from '../../select/index.mjs';\nimport _Tree from '../../tree/index.mjs';\nimport { useSelect } from './select.mjs';\nimport { useTree } from './tree.mjs';\nimport CacheOptions from './cache-options.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTreeSelect\",\n  inheritAttrs: false,\n  props: {\n    ...ElSelect.props,\n    ..._Tree.props,\n    cacheData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props, context) {\n    const { slots, expose } = context;\n    const select = ref();\n    const tree = ref();\n    const key = computed(() => props.nodeKey || props.valueKey || \"value\");\n    const selectProps = useSelect(props, context, { select, tree, key });\n    const { cacheOptions, ...treeProps } = useTree(props, context, {\n      select,\n      tree,\n      key\n    });\n    const methods = reactive({});\n    expose(methods);\n    onMounted(() => {\n      Object.assign(methods, {\n        ...pick(tree.value, [\n          \"filter\",\n          \"updateKeyChildren\",\n          \"getCheckedNodes\",\n          \"setCheckedNodes\",\n          \"getCheckedKeys\",\n          \"setCheckedKeys\",\n          \"setChecked\",\n          \"getHalfCheckedNodes\",\n          \"getHalfCheckedKeys\",\n          \"getCurrentKey\",\n          \"getCurrentNode\",\n          \"setCurrentKey\",\n          \"setCurrentNode\",\n          \"getNode\",\n          \"remove\",\n          \"append\",\n          \"insertBefore\",\n          \"insertAfter\"\n        ]),\n        ...pick(select.value, [\"focus\", \"blur\"])\n      });\n    });\n    return () => h(ElSelect, reactive({\n      ...selectProps,\n      ref: (ref2) => select.value = ref2\n    }), {\n      ...slots,\n      default: () => [\n        h(CacheOptions, { data: cacheOptions.value }),\n        h(_Tree, reactive({\n          ...treeProps,\n          ref: (ref2) => tree.value = ref2\n        }))\n      ]\n    });\n  }\n});\nvar TreeSelect = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree-select/src/tree-select.vue\"]]);\n\nexport { TreeSelect as default };\n//# sourceMappingURL=tree-select.mjs.map\n","start":1680878573234,"end":1680878573702}]}
