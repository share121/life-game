{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/tree-select/src/cache-options.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, inject, watch } from 'vue';\nimport '../../select/index.mjs';\nimport { selectKey } from '../../select/src/token.mjs';\n\nvar CacheOptions = defineComponent({\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const select = inject(selectKey);\n    watch(() => props.data, () => {\n      var _a;\n      props.data.forEach((item) => {\n        if (!select.cachedOptions.has(item.value)) {\n          select.cachedOptions.set(item.value, item);\n        }\n      });\n      const inputs = ((_a = select.selectWrapper) == null ? void 0 : _a.querySelectorAll(\"input\")) || [];\n      if (!Array.from(inputs).includes(document.activeElement)) {\n        select.setSelected();\n      }\n    }, { flush: \"post\", immediate: true });\n    return () => void 0;\n  }\n});\n\nexport { CacheOptions as default };\n//# sourceMappingURL=cache-options.mjs.map\n","start":1680880658620,"end":1680880658893}]}
