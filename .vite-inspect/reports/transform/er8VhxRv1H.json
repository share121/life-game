{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/table/src/table-footer/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, h } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { hColgroup } from '../h-helper.mjs';\nimport useStyle from './style-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\n\nvar TableFooter = defineComponent({\n  name: \"ElTableFooter\",\n  props: {\n    fixed: {\n      type: String,\n      default: \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    summaryMethod: Function,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      default: () => {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup(props) {\n    const { getCellClasses, getCellStyles, columns } = useStyle(props);\n    const ns = useNamespace(\"table\");\n    return {\n      ns,\n      getCellClasses,\n      getCellStyles,\n      columns\n    };\n  },\n  render() {\n    const {\n      columns,\n      getCellStyles,\n      getCellClasses,\n      summaryMethod,\n      sumText,\n      ns\n    } = this;\n    const data = this.store.states.data.value;\n    let sums = [];\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns,\n        data\n      });\n    } else {\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = sumText;\n          return;\n        }\n        const values = data.map((item) => Number(item[column.property]));\n        const precisions = [];\n        let notNumber = true;\n        values.forEach((value) => {\n          if (!Number.isNaN(+value)) {\n            notNumber = false;\n            const decimal = `${value}`.split(\".\")[1];\n            precisions.push(decimal ? decimal.length : 0);\n          }\n        });\n        const precision = Math.max.apply(null, precisions);\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr);\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat((prev + curr).toFixed(Math.min(precision, 20)));\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = \"\";\n        }\n      });\n    }\n    return h(\"table\", {\n      class: ns.e(\"footer\"),\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\"\n    }, [\n      hColgroup({\n        columns\n      }),\n      h(\"tbody\", [\n        h(\"tr\", {}, [\n          ...columns.map((column, cellIndex) => h(\"td\", {\n            key: cellIndex,\n            colspan: column.colSpan,\n            rowspan: column.rowSpan,\n            class: getCellClasses(columns, cellIndex),\n            style: getCellStyles(column, cellIndex)\n          }, [\n            h(\"div\", {\n              class: [\"cell\", column.labelClassName]\n            }, [sums[cellIndex]])\n          ]))\n        ])\n      ])\n    ]);\n  }\n});\n\nexport { TableFooter as default };\n//# sourceMappingURL=index.mjs.map\n","start":1680878575440,"end":1680878575762}]}
