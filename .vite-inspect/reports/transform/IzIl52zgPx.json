{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/avatar/src/avatar2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, computed, watch, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { avatarProps, avatarEmits } from './avatar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nconst _hoisted_1 = [\"src\", \"alt\", \"srcset\"];\nconst __default__ = defineComponent({\n  name: \"ElAvatar\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: avatarProps,\n  emits: avatarEmits,\n  setup(__props, { emit }) {\n    const props = __props;\n    const ns = useNamespace(\"avatar\");\n    const hasLoadError = ref(false);\n    const avatarClass = computed(() => {\n      const { size, icon, shape } = props;\n      const classList = [ns.b()];\n      if (isString(size))\n        classList.push(ns.m(size));\n      if (icon)\n        classList.push(ns.m(\"icon\"));\n      if (shape)\n        classList.push(ns.m(shape));\n      return classList;\n    });\n    const sizeStyle = computed(() => {\n      const { size } = props;\n      return isNumber(size) ? ns.cssVarBlock({\n        size: addUnit(size) || \"\"\n      }) : void 0;\n    });\n    const fitStyle = computed(() => ({\n      objectFit: props.fit\n    }));\n    watch(() => props.src, () => hasLoadError.value = false);\n    function handleError(e) {\n      hasLoadError.value = true;\n      emit(\"error\", e);\n    }\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"span\", {\n        class: normalizeClass(unref(avatarClass)),\n        style: normalizeStyle(unref(sizeStyle))\n      }, [\n        (_ctx.src || _ctx.srcSet) && !hasLoadError.value ? (openBlock(), createElementBlock(\"img\", {\n          key: 0,\n          src: _ctx.src,\n          alt: _ctx.alt,\n          srcset: _ctx.srcSet,\n          style: normalizeStyle(unref(fitStyle)),\n          onError: handleError\n        }, null, 44, _hoisted_1)) : _ctx.icon ? (openBlock(), createBlock(unref(ElIcon), { key: 1 }, {\n          default: withCtx(() => [\n            (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))\n          ]),\n          _: 1\n        })) : renderSlot(_ctx.$slots, \"default\", { key: 2 })\n      ], 6);\n    };\n  }\n});\nvar Avatar = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/avatar/src/avatar.vue\"]]);\n\nexport { Avatar as default };\n//# sourceMappingURL=avatar2.mjs.map\n","start":1680879310161,"end":1680879311628}]}
