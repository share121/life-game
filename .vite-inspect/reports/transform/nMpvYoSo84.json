{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/alert/src/alert2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, useSlots, ref, computed, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, resolveDynamicComponent, createCommentVNode, createElementBlock, renderSlot, createTextVNode, toDisplayString, Fragment, createVNode, vShow } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { alertProps, alertEmits } from './alert.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElAlert\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: alertProps,\n  emits: alertEmits,\n  setup(__props, { emit }) {\n    const props = __props;\n    const { Close } = TypeComponents;\n    const slots = useSlots();\n    const ns = useNamespace(\"alert\");\n    const visible = ref(true);\n    const iconComponent = computed(() => TypeComponentsMap[props.type]);\n    const iconClass = computed(() => [\n      ns.e(\"icon\"),\n      { [ns.is(\"big\")]: !!props.description || !!slots.default }\n    ]);\n    const isBoldTitle = computed(() => {\n      return { [ns.is(\"bold\")]: props.description || slots.default };\n    });\n    const close = (evt) => {\n      visible.value = false;\n      emit(\"close\", evt);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [\n          withDirectives(createElementVNode(\"div\", {\n            class: normalizeClass([unref(ns).b(), unref(ns).m(_ctx.type), unref(ns).is(\"center\", _ctx.center), unref(ns).is(_ctx.effect)]),\n            role: \"alert\"\n          }, [\n            _ctx.showIcon && unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n              key: 0,\n              class: normalizeClass(unref(iconClass))\n            }, {\n              default: withCtx(() => [\n                (openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))\n              ]),\n              _: 1\n            }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true),\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"content\"))\n            }, [\n              _ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n                key: 0,\n                class: normalizeClass([unref(ns).e(\"title\"), unref(isBoldTitle)])\n              }, [\n                renderSlot(_ctx.$slots, \"title\", {}, () => [\n                  createTextVNode(toDisplayString(_ctx.title), 1)\n                ])\n              ], 2)) : createCommentVNode(\"v-if\", true),\n              _ctx.$slots.default || _ctx.description ? (openBlock(), createElementBlock(\"p\", {\n                key: 1,\n                class: normalizeClass(unref(ns).e(\"description\"))\n              }, [\n                renderSlot(_ctx.$slots, \"default\", {}, () => [\n                  createTextVNode(toDisplayString(_ctx.description), 1)\n                ])\n              ], 2)) : createCommentVNode(\"v-if\", true),\n              _ctx.closable ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [\n                _ctx.closeText ? (openBlock(), createElementBlock(\"div\", {\n                  key: 0,\n                  class: normalizeClass([unref(ns).e(\"close-btn\"), unref(ns).is(\"customed\")]),\n                  onClick: close\n                }, toDisplayString(_ctx.closeText), 3)) : (openBlock(), createBlock(unref(ElIcon), {\n                  key: 1,\n                  class: normalizeClass(unref(ns).e(\"close-btn\")),\n                  onClick: close\n                }, {\n                  default: withCtx(() => [\n                    createVNode(unref(Close))\n                  ]),\n                  _: 1\n                }, 8, [\"class\"]))\n              ], 64)) : createCommentVNode(\"v-if\", true)\n            ], 2)\n          ], 2), [\n            [vShow, visible.value]\n          ])\n        ]),\n        _: 3\n      }, 8, [\"name\"]);\n    };\n  }\n});\nvar Alert = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue\"]]);\n\nexport { Alert as default };\n//# sourceMappingURL=alert2.mjs.map\n","start":1680879310100,"end":1680879311558}]}
