{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/slider/src/button2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, reactive, toRefs, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createVNode, withCtx, createElementVNode, toDisplayString } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../../hooks/index.mjs';\nimport './composables/index.mjs';\nimport { sliderButtonProps, sliderButtonEmits } from './button.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useSliderButton } from './composables/use-slider-button.mjs';\n\nconst _hoisted_1 = [\"tabindex\"];\nconst __default__ = defineComponent({\n  name: \"ElSliderButton\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: sliderButtonProps,\n  emits: sliderButtonEmits,\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    const ns = useNamespace(\"slider\");\n    const initData = reactive({\n      hovering: false,\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      currentX: 0,\n      startY: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: 0,\n      oldValue: props.modelValue\n    });\n    const {\n      disabled,\n      button,\n      tooltip,\n      showTooltip,\n      tooltipVisible,\n      wrapperStyle,\n      formatValue,\n      handleMouseEnter,\n      handleMouseLeave,\n      onButtonDown,\n      onKeyDown,\n      setPosition\n    } = useSliderButton(props, initData, emit);\n    const { hovering, dragging } = toRefs(initData);\n    expose({\n      onButtonDown,\n      onKeyDown,\n      setPosition,\n      hovering,\n      dragging\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"button\",\n        ref: button,\n        class: normalizeClass([unref(ns).e(\"button-wrapper\"), { hover: unref(hovering), dragging: unref(dragging) }]),\n        style: normalizeStyle(unref(wrapperStyle)),\n        tabindex: unref(disabled) ? -1 : 0,\n        onMouseenter: _cache[0] || (_cache[0] = (...args) => unref(handleMouseEnter) && unref(handleMouseEnter)(...args)),\n        onMouseleave: _cache[1] || (_cache[1] = (...args) => unref(handleMouseLeave) && unref(handleMouseLeave)(...args)),\n        onMousedown: _cache[2] || (_cache[2] = (...args) => unref(onButtonDown) && unref(onButtonDown)(...args)),\n        onTouchstart: _cache[3] || (_cache[3] = (...args) => unref(onButtonDown) && unref(onButtonDown)(...args)),\n        onFocus: _cache[4] || (_cache[4] = (...args) => unref(handleMouseEnter) && unref(handleMouseEnter)(...args)),\n        onBlur: _cache[5] || (_cache[5] = (...args) => unref(handleMouseLeave) && unref(handleMouseLeave)(...args)),\n        onKeydown: _cache[6] || (_cache[6] = (...args) => unref(onKeyDown) && unref(onKeyDown)(...args))\n      }, [\n        createVNode(unref(ElTooltip), {\n          ref_key: \"tooltip\",\n          ref: tooltip,\n          visible: unref(tooltipVisible),\n          placement: _ctx.placement,\n          \"fallback-placements\": [\"top\", \"bottom\", \"right\", \"left\"],\n          \"stop-popper-mouse-event\": false,\n          \"popper-class\": _ctx.tooltipClass,\n          disabled: !unref(showTooltip),\n          persistent: \"\"\n        }, {\n          content: withCtx(() => [\n            createElementVNode(\"span\", null, toDisplayString(unref(formatValue)), 1)\n          ]),\n          default: withCtx(() => [\n            createElementVNode(\"div\", {\n              class: normalizeClass([unref(ns).e(\"button\"), { hover: unref(hovering), dragging: unref(dragging) }])\n            }, null, 2)\n          ]),\n          _: 1\n        }, 8, [\"visible\", \"placement\", \"popper-class\", \"disabled\"])\n      ], 46, _hoisted_1);\n    };\n  }\n});\nvar SliderButton = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/slider/src/button.vue\"]]);\n\nexport { SliderButton as default };\n//# sourceMappingURL=button2.mjs.map\n","start":1680878575361,"end":1680878575617}]}
