{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/hooks/use-restore-active/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { watch, isRef } from 'vue';\n\nconst useRestoreActive = (toggle, initialFocus) => {\n  let previousActive;\n  watch(() => toggle.value, (val) => {\n    var _a, _b;\n    if (val) {\n      previousActive = document.activeElement;\n      if (isRef(initialFocus)) {\n        (_b = (_a = initialFocus.value).focus) == null ? void 0 : _b.call(_a);\n      }\n    } else {\n      if (process.env.NODE_ENV === \"test\") {\n        previousActive.focus.call(previousActive);\n      } else {\n        previousActive.focus();\n      }\n    }\n  });\n};\n\nexport { useRestoreActive };\n//# sourceMappingURL=index.mjs.map\n","start":1680878568268,"end":1680878568467},{"name":"vite:define","result":"import { watch, isRef } from 'vue';\n\nconst useRestoreActive = (toggle, initialFocus) => {\n  let previousActive;\n  watch(() => toggle.value, (val) => {\n    var _a, _b;\n    if (val) {\n      previousActive = document.activeElement;\n      if (isRef(initialFocus)) {\n        (_b = (_a = initialFocus.value).focus) == null ? void 0 : _b.call(_a);\n      }\n    } else {\n      if (\"production\" === \"test\") {\n        previousActive.focus.call(previousActive);\n      } else {\n        previousActive.focus();\n      }\n    }\n  });\n};\n\nexport { useRestoreActive };\n//# sourceMappingURL=index.mjs.map\n","start":1680878568467,"end":1680878568467,"order":"normal"}]}
