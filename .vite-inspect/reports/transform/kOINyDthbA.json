{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/countdown/src/countdown2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, computed, watch, onBeforeUnmount, openBlock, createBlock, unref, createSlots, renderList, withCtx, renderSlot } from 'vue';\nimport { ElStatistic } from '../../statistic/index.mjs';\nimport '../../../utils/index.mjs';\nimport { countdownProps, countdownEmits } from './countdown.mjs';\nimport { getTime, formatTime } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { cAF, rAF } from '../../../utils/raf.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElCountdown\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: countdownProps,\n  emits: countdownEmits,\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    let timer;\n    const rawValue = ref(getTime(props.value) - Date.now());\n    const displayValue = computed(() => formatTime(rawValue.value, props.format));\n    const formatter = (val) => formatTime(val, props.format);\n    const stopTimer = () => {\n      if (timer) {\n        cAF(timer);\n        timer = void 0;\n      }\n    };\n    const startTimer = () => {\n      const timestamp = getTime(props.value);\n      const frameFunc = () => {\n        let diff = timestamp - Date.now();\n        emit(\"change\", diff);\n        if (diff <= 0) {\n          diff = 0;\n          stopTimer();\n          emit(\"finish\");\n        } else {\n          timer = rAF(frameFunc);\n        }\n        rawValue.value = diff;\n      };\n      timer = rAF(frameFunc);\n    };\n    watch(() => [props.value, props.format], () => {\n      stopTimer();\n      startTimer();\n    }, {\n      immediate: true\n    });\n    onBeforeUnmount(() => {\n      stopTimer();\n    });\n    expose({\n      displayValue\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElStatistic), {\n        value: rawValue.value,\n        title: _ctx.title,\n        prefix: _ctx.prefix,\n        suffix: _ctx.suffix,\n        \"value-style\": _ctx.valueStyle,\n        formatter\n      }, createSlots({ _: 2 }, [\n        renderList(_ctx.$slots, (_, name) => {\n          return {\n            name,\n            fn: withCtx(() => [\n              renderSlot(_ctx.$slots, name)\n            ])\n          };\n        })\n      ]), 1032, [\"value\", \"title\", \"prefix\", \"suffix\", \"value-style\"]);\n    };\n  }\n});\nvar Countdown = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/countdown/src/countdown.vue\"]]);\n\nexport { Countdown as default };\n//# sourceMappingURL=countdown2.mjs.map\n","start":1680880651888,"end":1680880652364}]}
