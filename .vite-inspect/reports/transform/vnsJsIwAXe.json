{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/pagination/src/components/sizes2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, watch, computed, openBlock, createElementBlock, normalizeClass, unref, createVNode, withCtx, Fragment, renderList, createBlock } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { ElSelect, ElOption } from '../../../select/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { usePagination } from '../usePagination.mjs';\nimport { paginationSizesProps } from './sizes.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElPaginationSizes\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: paginationSizesProps,\n  emits: [\"page-size-change\"],\n  setup(__props, { emit }) {\n    const props = __props;\n    const { t } = useLocale();\n    const ns = useNamespace(\"pagination\");\n    const pagination = usePagination();\n    const innerPageSize = ref(props.pageSize);\n    watch(() => props.pageSizes, (newVal, oldVal) => {\n      if (isEqual(newVal, oldVal))\n        return;\n      if (Array.isArray(newVal)) {\n        const pageSize = newVal.includes(props.pageSize) ? props.pageSize : props.pageSizes[0];\n        emit(\"page-size-change\", pageSize);\n      }\n    });\n    watch(() => props.pageSize, (newVal) => {\n      innerPageSize.value = newVal;\n    });\n    const innerPageSizes = computed(() => props.pageSizes);\n    function handleChange(val) {\n      var _a;\n      if (val !== innerPageSize.value) {\n        innerPageSize.value = val;\n        (_a = pagination.handleSizeChange) == null ? void 0 : _a.call(pagination, Number(val));\n      }\n    }\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"span\", {\n        class: normalizeClass(unref(ns).e(\"sizes\"))\n      }, [\n        createVNode(unref(ElSelect), {\n          \"model-value\": innerPageSize.value,\n          disabled: _ctx.disabled,\n          \"popper-class\": _ctx.popperClass,\n          size: _ctx.size,\n          \"validate-event\": false,\n          onChange: handleChange\n        }, {\n          default: withCtx(() => [\n            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(innerPageSizes), (item) => {\n              return openBlock(), createBlock(unref(ElOption), {\n                key: item,\n                value: item,\n                label: item + unref(t)(\"el.pagination.pagesize\")\n              }, null, 8, [\"value\", \"label\"]);\n            }), 128))\n          ]),\n          _: 1\n        }, 8, [\"model-value\", \"disabled\", \"popper-class\", \"size\"])\n      ], 2);\n    };\n  }\n});\nvar Sizes = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/sizes.vue\"]]);\n\nexport { Sizes as default };\n//# sourceMappingURL=sizes2.mjs.map\n","start":1680880653315,"end":1680880653744}]}
