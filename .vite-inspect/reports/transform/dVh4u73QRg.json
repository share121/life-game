{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/popper/src/trigger2.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, inject, computed, onMounted, watch, onBeforeUnmount, openBlock, createBlock, unref, mergeProps, withCtx, renderSlot, createCommentVNode } from 'vue';\nimport { isNil } from 'lodash-unified';\nimport { unrefElement } from '@vueuse/core';\nimport '../../slot/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { POPPER_INJECTION_KEY } from './constants.mjs';\nimport { popperTriggerProps } from './trigger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useForwardRef } from '../../../hooks/use-forward-ref/index.mjs';\nimport { isElement } from '../../../utils/types.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElPopperTrigger\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: popperTriggerProps,\n  setup(__props, { expose }) {\n    const props = __props;\n    const { role, triggerRef } = inject(POPPER_INJECTION_KEY, void 0);\n    useForwardRef(triggerRef);\n    const ariaControls = computed(() => {\n      return ariaHaspopup.value ? props.id : void 0;\n    });\n    const ariaDescribedby = computed(() => {\n      if (role && role.value === \"tooltip\") {\n        return props.open && props.id ? props.id : void 0;\n      }\n      return void 0;\n    });\n    const ariaHaspopup = computed(() => {\n      if (role && role.value !== \"tooltip\") {\n        return role.value;\n      }\n      return void 0;\n    });\n    const ariaExpanded = computed(() => {\n      return ariaHaspopup.value ? `${props.open}` : void 0;\n    });\n    let virtualTriggerAriaStopWatch = void 0;\n    onMounted(() => {\n      watch(() => props.virtualRef, (virtualEl) => {\n        if (virtualEl) {\n          triggerRef.value = unrefElement(virtualEl);\n        }\n      }, {\n        immediate: true\n      });\n      watch(triggerRef, (el, prevEl) => {\n        virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();\n        virtualTriggerAriaStopWatch = void 0;\n        if (isElement(el)) {\n          ;\n          [\n            \"onMouseenter\",\n            \"onMouseleave\",\n            \"onClick\",\n            \"onKeydown\",\n            \"onFocus\",\n            \"onBlur\",\n            \"onContextmenu\"\n          ].forEach((eventName) => {\n            var _a;\n            const handler = props[eventName];\n            if (handler) {\n              ;\n              el.addEventListener(eventName.slice(2).toLowerCase(), handler);\n              (_a = prevEl == null ? void 0 : prevEl.removeEventListener) == null ? void 0 : _a.call(prevEl, eventName.slice(2).toLowerCase(), handler);\n            }\n          });\n          virtualTriggerAriaStopWatch = watch([ariaControls, ariaDescribedby, ariaHaspopup, ariaExpanded], (watches) => {\n            ;\n            [\n              \"aria-controls\",\n              \"aria-describedby\",\n              \"aria-haspopup\",\n              \"aria-expanded\"\n            ].forEach((key, idx) => {\n              isNil(watches[idx]) ? el.removeAttribute(key) : el.setAttribute(key, watches[idx]);\n            });\n          }, { immediate: true });\n        }\n        if (isElement(prevEl)) {\n          ;\n          [\n            \"aria-controls\",\n            \"aria-describedby\",\n            \"aria-haspopup\",\n            \"aria-expanded\"\n          ].forEach((key) => prevEl.removeAttribute(key));\n        }\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(() => {\n      virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();\n      virtualTriggerAriaStopWatch = void 0;\n    });\n    expose({\n      triggerRef\n    });\n    return (_ctx, _cache) => {\n      return !_ctx.virtualTriggering ? (openBlock(), createBlock(unref(OnlyChild), mergeProps({ key: 0 }, _ctx.$attrs, {\n        \"aria-controls\": unref(ariaControls),\n        \"aria-describedby\": unref(ariaDescribedby),\n        \"aria-expanded\": unref(ariaExpanded),\n        \"aria-haspopup\": unref(ariaHaspopup)\n      }), {\n        default: withCtx(() => [\n          renderSlot(_ctx.$slots, \"default\")\n        ]),\n        _: 3\n      }, 16, [\"aria-controls\", \"aria-describedby\", \"aria-expanded\", \"aria-haspopup\"])) : createCommentVNode(\"v-if\", true);\n    };\n  }\n});\nvar ElPopperTrigger = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popper/src/trigger.vue\"]]);\n\nexport { ElPopperTrigger as default };\n//# sourceMappingURL=trigger2.mjs.map\n","start":1680878566396,"end":1680878566746}]}
