{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/hooks/use-popper-container/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { computed, onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport { useGetDerivedNamespace } from '../use-namespace/index.mjs';\nimport { useIdInjection } from '../use-id/index.mjs';\n\nlet cachedContainer;\nconst usePopperContainerId = () => {\n  const namespace = useGetDerivedNamespace();\n  const idInjection = useIdInjection();\n  const id = computed(() => {\n    return `${namespace.value}-popper-container-${idInjection.prefix}`;\n  });\n  const selector = computed(() => `#${id.value}`);\n  return {\n    id,\n    selector\n  };\n};\nconst createContainer = (id) => {\n  const container = document.createElement(\"div\");\n  container.id = id;\n  document.body.appendChild(container);\n  return container;\n};\nconst usePopperContainer = () => {\n  const { id, selector } = usePopperContainerId();\n  onBeforeMount(() => {\n    if (!isClient)\n      return;\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer && !document.body.querySelector(selector.value)) {\n      cachedContainer = createContainer(id.value);\n    }\n  });\n  return {\n    id,\n    selector\n  };\n};\n\nexport { usePopperContainer, usePopperContainerId };\n//# sourceMappingURL=index.mjs.map\n","start":1680879309898,"end":1680879310099},{"name":"vite:define","result":"import { computed, onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport { useGetDerivedNamespace } from '../use-namespace/index.mjs';\nimport { useIdInjection } from '../use-id/index.mjs';\n\nlet cachedContainer;\nconst usePopperContainerId = () => {\n  const namespace = useGetDerivedNamespace();\n  const idInjection = useIdInjection();\n  const id = computed(() => {\n    return `${namespace.value}-popper-container-${idInjection.prefix}`;\n  });\n  const selector = computed(() => `#${id.value}`);\n  return {\n    id,\n    selector\n  };\n};\nconst createContainer = (id) => {\n  const container = document.createElement(\"div\");\n  container.id = id;\n  document.body.appendChild(container);\n  return container;\n};\nconst usePopperContainer = () => {\n  const { id, selector } = usePopperContainerId();\n  onBeforeMount(() => {\n    if (!isClient)\n      return;\n    if (\"production\" === \"test\" || !cachedContainer && !document.body.querySelector(selector.value)) {\n      cachedContainer = createContainer(id.value);\n    }\n  });\n  return {\n    id,\n    selector\n  };\n};\n\nexport { usePopperContainer, usePopperContainerId };\n//# sourceMappingURL=index.mjs.map\n","start":1680879310099,"end":1680879310099,"order":"normal"}]}
