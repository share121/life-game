{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/date-picker/src/date-picker-com/basic-year-table.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, ref, computed, watch, nextTick, openBlock, createElementBlock, unref, normalizeClass, createElementVNode, Fragment, renderList, withKeys, withModifiers, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../time-picker/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { basicYearTableProps } from '../props/basic-year-table.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { rangeArr } from '../../../time-picker/src/utils.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { castArray } from '../../../../utils/arrays.mjs';\nimport { hasClass } from '../../../../utils/dom/style.mjs';\n\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = [\"aria-selected\", \"tabindex\", \"onKeydown\"];\nconst _hoisted_3 = { class: \"cell\" };\nconst _hoisted_4 = { key: 1 };\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"basic-year-table\",\n  props: basicYearTableProps,\n  emits: [\"pick\"],\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    const datesInYear = (year, lang2) => {\n      const firstDay = dayjs(String(year)).locale(lang2).startOf(\"year\");\n      const lastDay = firstDay.endOf(\"year\");\n      const numOfDays = lastDay.dayOfYear();\n      return rangeArr(numOfDays).map((n) => firstDay.add(n, \"day\").toDate());\n    };\n    const ns = useNamespace(\"year-table\");\n    const { t, lang } = useLocale();\n    const tbodyRef = ref();\n    const currentCellRef = ref();\n    const startYear = computed(() => {\n      return Math.floor(props.date.year() / 10) * 10;\n    });\n    const focus = () => {\n      var _a;\n      (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n    };\n    const getCellKls = (year) => {\n      const kls = {};\n      const today = dayjs().locale(lang.value);\n      kls.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;\n      kls.current = castArray(props.parsedValue).findIndex((d) => d.year() === year) >= 0;\n      kls.today = today.year() === year;\n      return kls;\n    };\n    const isSelectedCell = (year) => {\n      return year === startYear.value && props.date.year() < startYear.value && props.date.year() > startYear.value + 9 || castArray(props.date).findIndex((date) => date.year() === year) >= 0;\n    };\n    const handleYearTableClick = (event) => {\n      const clickTarget = event.target;\n      const target = clickTarget.closest(\"td\");\n      if (target && target.textContent) {\n        if (hasClass(target, \"disabled\"))\n          return;\n        const year = target.textContent || target.innerText;\n        emit(\"pick\", Number(year));\n      }\n    };\n    watch(() => props.date, async () => {\n      var _a, _b;\n      if ((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement)) {\n        await nextTick();\n        (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n      }\n    });\n    expose({\n      focus\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"table\", {\n        role: \"grid\",\n        \"aria-label\": unref(t)(\"el.datepicker.yearTablePrompt\"),\n        class: normalizeClass(unref(ns).b()),\n        onClick: handleYearTableClick\n      }, [\n        createElementVNode(\"tbody\", {\n          ref_key: \"tbodyRef\",\n          ref: tbodyRef\n        }, [\n          (openBlock(), createElementBlock(Fragment, null, renderList(3, (_, i) => {\n            return createElementVNode(\"tr\", { key: i }, [\n              (openBlock(), createElementBlock(Fragment, null, renderList(4, (__, j) => {\n                return openBlock(), createElementBlock(Fragment, {\n                  key: i + \"_\" + j\n                }, [\n                  i * 4 + j < 10 ? (openBlock(), createElementBlock(\"td\", {\n                    key: 0,\n                    ref_for: true,\n                    ref: (el) => isSelectedCell(unref(startYear) + i * 4 + j) && (currentCellRef.value = el),\n                    class: normalizeClass([\"available\", getCellKls(unref(startYear) + i * 4 + j)]),\n                    \"aria-selected\": `${isSelectedCell(unref(startYear) + i * 4 + j)}`,\n                    tabindex: isSelectedCell(unref(startYear) + i * 4 + j) ? 0 : -1,\n                    onKeydown: [\n                      withKeys(withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"space\"]),\n                      withKeys(withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"enter\"])\n                    ]\n                  }, [\n                    createElementVNode(\"span\", _hoisted_3, toDisplayString(unref(startYear) + i * 4 + j), 1)\n                  ], 42, _hoisted_2)) : (openBlock(), createElementBlock(\"td\", _hoisted_4))\n                ], 64);\n              }), 64))\n            ]);\n          }), 64))\n        ], 512)\n      ], 10, _hoisted_1);\n    };\n  }\n});\nvar YearTable = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue\"]]);\n\nexport { YearTable as default };\n//# sourceMappingURL=basic-year-table.mjs.map\n","start":1680880662559,"end":1680880662940}]}
