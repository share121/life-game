{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/checkbox/src/composables/use-checkbox-disabled.mjs","transforms":[{"name":"vite:load-fallback","result":"import { inject, computed } from 'vue';\nimport '../../../form/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { checkboxGroupContextKey } from '../constants.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { useFormDisabled } from '../../../form/src/hooks/use-form-common-props.mjs';\n\nconst useCheckboxDisabled = ({\n  model,\n  isChecked\n}) => {\n  const checkboxGroup = inject(checkboxGroupContextKey, void 0);\n  const isLimitDisabled = computed(() => {\n    var _a, _b;\n    const max = (_a = checkboxGroup == null ? void 0 : checkboxGroup.max) == null ? void 0 : _a.value;\n    const min = (_b = checkboxGroup == null ? void 0 : checkboxGroup.min) == null ? void 0 : _b.value;\n    return !isUndefined(max) && model.value.length >= max && !isChecked.value || !isUndefined(min) && model.value.length <= min && isChecked.value;\n  });\n  const isDisabled = useFormDisabled(computed(() => (checkboxGroup == null ? void 0 : checkboxGroup.disabled.value) || isLimitDisabled.value));\n  return {\n    isDisabled,\n    isLimitDisabled\n  };\n};\n\nexport { useCheckboxDisabled };\n//# sourceMappingURL=use-checkbox-disabled.mjs.map\n","start":1680878576688,"end":1680878576939}]}
