{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/components/table/src/table.mjs","transforms":[{"name":"vite:load-fallback","result":"import { defineComponent, getCurrentInstance, provide, computed, resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, withDirectives, createVNode, createCommentVNode, withCtx, createBlock, createTextVNode, toDisplayString, vShow } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { createStore } from './store/helper.mjs';\nimport TableLayout from './table-layout.mjs';\nimport TableHeader from './table-header/index.mjs';\nimport TableBody from './table-body/index.mjs';\nimport TableFooter from './table-footer/index.mjs';\nimport useUtils from './table/utils-helper.mjs';\nimport useStyle from './table/style-helper.mjs';\nimport useKeyRender from './table/key-render-helper.mjs';\nimport defaultProps from './table/defaults.mjs';\nimport { TABLE_INJECTION_KEY } from './tokens.mjs';\nimport { hColgroup } from './h-helper.mjs';\nimport { useScrollbar } from './composables/use-scrollbar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport Mousewheel from '../../../directives/mousewheel/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nlet tableIdSeed = 1;\nconst _sfc_main = defineComponent({\n  name: \"ElTable\",\n  directives: {\n    Mousewheel\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup\n  },\n  props: defaultProps,\n  emits: [\n    \"select\",\n    \"select-all\",\n    \"selection-change\",\n    \"cell-mouse-enter\",\n    \"cell-mouse-leave\",\n    \"cell-contextmenu\",\n    \"cell-click\",\n    \"cell-dblclick\",\n    \"row-click\",\n    \"row-contextmenu\",\n    \"row-dblclick\",\n    \"header-click\",\n    \"header-contextmenu\",\n    \"sort-change\",\n    \"filter-change\",\n    \"current-change\",\n    \"header-dragend\",\n    \"expand-change\"\n  ],\n  setup(props) {\n    const { t } = useLocale();\n    const ns = useNamespace(\"table\");\n    const table = getCurrentInstance();\n    provide(TABLE_INJECTION_KEY, table);\n    const store = createStore(table, props);\n    table.store = store;\n    const layout = new TableLayout({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader\n    });\n    table.layout = layout;\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0);\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort\n    } = useUtils(store);\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle\n    } = useStyle(props, layout, store, table);\n    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } = useScrollbar();\n    const debouncedUpdateLayout = debounce(doLayout, 50);\n    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`;\n    table.tableId = tableId;\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout\n    };\n    const computedSumText = computed(() => props.sumText || t(\"el.table.sumText\"));\n    const computedEmptyText = computed(() => {\n      return props.emptyText || t(\"el.table.emptyText\");\n    });\n    useKeyRender(table);\n    return {\n      ns,\n      layout,\n      store,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      doLayout,\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      tableInnerStyle,\n      scrollbarStyle,\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop\n    };\n  }\n});\nconst _hoisted_1 = [\"data-prefix\"];\nconst _hoisted_2 = {\n  ref: \"hiddenColumns\",\n  class: \"hidden-columns\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hColgroup = resolveComponent(\"hColgroup\");\n  const _component_table_header = resolveComponent(\"table-header\");\n  const _component_table_body = resolveComponent(\"table-body\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_table_footer = resolveComponent(\"table-footer\");\n  const _directive_mousewheel = resolveDirective(\"mousewheel\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"tableWrapper\",\n    class: normalizeClass([\n      {\n        [_ctx.ns.m(\"fit\")]: _ctx.fit,\n        [_ctx.ns.m(\"striped\")]: _ctx.stripe,\n        [_ctx.ns.m(\"border\")]: _ctx.border || _ctx.isGroup,\n        [_ctx.ns.m(\"hidden\")]: _ctx.isHidden,\n        [_ctx.ns.m(\"group\")]: _ctx.isGroup,\n        [_ctx.ns.m(\"fluid-height\")]: _ctx.maxHeight,\n        [_ctx.ns.m(\"scrollable-x\")]: _ctx.layout.scrollX.value,\n        [_ctx.ns.m(\"scrollable-y\")]: _ctx.layout.scrollY.value,\n        [_ctx.ns.m(\"enable-row-hover\")]: !_ctx.store.states.isComplex.value,\n        [_ctx.ns.m(\"enable-row-transition\")]: (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100,\n        \"has-footer\": _ctx.showSummary\n      },\n      _ctx.ns.m(_ctx.tableSize),\n      _ctx.className,\n      _ctx.ns.b(),\n      _ctx.ns.m(`layout-${_ctx.tableLayout}`)\n    ]),\n    style: normalizeStyle(_ctx.style),\n    \"data-prefix\": _ctx.ns.namespace.value,\n    onMouseleave: _cache[0] || (_cache[0] = ($event) => _ctx.handleMouseLeave())\n  }, [\n    createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.e(\"inner-wrapper\")),\n      style: normalizeStyle(_ctx.tableInnerStyle)\n    }, [\n      createElementVNode(\"div\", _hoisted_2, [\n        renderSlot(_ctx.$slots, \"default\")\n      ], 512),\n      _ctx.showHeader && _ctx.tableLayout === \"fixed\" ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"headerWrapper\",\n        class: normalizeClass(_ctx.ns.e(\"header-wrapper\"))\n      }, [\n        createElementVNode(\"table\", {\n          ref: \"tableHeader\",\n          class: normalizeClass(_ctx.ns.e(\"header\")),\n          style: normalizeStyle(_ctx.tableBodyStyles),\n          border: \"0\",\n          cellpadding: \"0\",\n          cellspacing: \"0\"\n        }, [\n          createVNode(_component_hColgroup, {\n            columns: _ctx.store.states.columns.value,\n            \"table-layout\": _ctx.tableLayout\n          }, null, 8, [\"columns\", \"table-layout\"]),\n          createVNode(_component_table_header, {\n            ref: \"tableHeaderRef\",\n            border: _ctx.border,\n            \"default-sort\": _ctx.defaultSort,\n            store: _ctx.store,\n            onSetDragVisible: _ctx.setDragVisible\n          }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])\n        ], 6)\n      ], 2)), [\n        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]\n      ]) : createCommentVNode(\"v-if\", true),\n      createElementVNode(\"div\", {\n        ref: \"bodyWrapper\",\n        class: normalizeClass(_ctx.ns.e(\"body-wrapper\"))\n      }, [\n        createVNode(_component_el_scrollbar, {\n          ref: \"scrollBarRef\",\n          \"view-style\": _ctx.scrollbarViewStyle,\n          \"wrap-style\": _ctx.scrollbarStyle,\n          always: _ctx.scrollbarAlwaysOn\n        }, {\n          default: withCtx(() => [\n            createElementVNode(\"table\", {\n              ref: \"tableBody\",\n              class: normalizeClass(_ctx.ns.e(\"body\")),\n              cellspacing: \"0\",\n              cellpadding: \"0\",\n              border: \"0\",\n              style: normalizeStyle({\n                width: _ctx.bodyWidth,\n                tableLayout: _ctx.tableLayout\n              })\n            }, [\n              createVNode(_component_hColgroup, {\n                columns: _ctx.store.states.columns.value,\n                \"table-layout\": _ctx.tableLayout\n              }, null, 8, [\"columns\", \"table-layout\"]),\n              _ctx.showHeader && _ctx.tableLayout === \"auto\" ? (openBlock(), createBlock(_component_table_header, {\n                key: 0,\n                ref: \"tableHeaderRef\",\n                border: _ctx.border,\n                \"default-sort\": _ctx.defaultSort,\n                store: _ctx.store,\n                onSetDragVisible: _ctx.setDragVisible\n              }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])) : createCommentVNode(\"v-if\", true),\n              createVNode(_component_table_body, {\n                context: _ctx.context,\n                highlight: _ctx.highlightCurrentRow,\n                \"row-class-name\": _ctx.rowClassName,\n                \"tooltip-effect\": _ctx.tooltipEffect,\n                \"tooltip-options\": _ctx.tooltipOptions,\n                \"row-style\": _ctx.rowStyle,\n                store: _ctx.store,\n                stripe: _ctx.stripe\n              }, null, 8, [\"context\", \"highlight\", \"row-class-name\", \"tooltip-effect\", \"tooltip-options\", \"row-style\", \"store\", \"stripe\"])\n            ], 6),\n            _ctx.isEmpty ? (openBlock(), createElementBlock(\"div\", {\n              key: 0,\n              ref: \"emptyBlock\",\n              style: normalizeStyle(_ctx.emptyBlockStyle),\n              class: normalizeClass(_ctx.ns.e(\"empty-block\"))\n            }, [\n              createElementVNode(\"span\", {\n                class: normalizeClass(_ctx.ns.e(\"empty-text\"))\n              }, [\n                renderSlot(_ctx.$slots, \"empty\", {}, () => [\n                  createTextVNode(toDisplayString(_ctx.computedEmptyText), 1)\n                ])\n              ], 2)\n            ], 6)) : createCommentVNode(\"v-if\", true),\n            _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n              key: 1,\n              ref: \"appendWrapper\",\n              class: normalizeClass(_ctx.ns.e(\"append-wrapper\"))\n            }, [\n              renderSlot(_ctx.$slots, \"append\")\n            ], 2)) : createCommentVNode(\"v-if\", true)\n          ]),\n          _: 3\n        }, 8, [\"view-style\", \"wrap-style\", \"always\"])\n      ], 2),\n      _ctx.showSummary ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        ref: \"footerWrapper\",\n        class: normalizeClass(_ctx.ns.e(\"footer-wrapper\"))\n      }, [\n        createVNode(_component_table_footer, {\n          border: _ctx.border,\n          \"default-sort\": _ctx.defaultSort,\n          store: _ctx.store,\n          style: normalizeStyle(_ctx.tableBodyStyles),\n          \"sum-text\": _ctx.computedSumText,\n          \"summary-method\": _ctx.summaryMethod\n        }, null, 8, [\"border\", \"default-sort\", \"store\", \"style\", \"sum-text\", \"summary-method\"])\n      ], 2)), [\n        [vShow, !_ctx.isEmpty],\n        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]\n      ]) : createCommentVNode(\"v-if\", true),\n      _ctx.border || _ctx.isGroup ? (openBlock(), createElementBlock(\"div\", {\n        key: 2,\n        class: normalizeClass(_ctx.ns.e(\"border-left-patch\"))\n      }, null, 2)) : createCommentVNode(\"v-if\", true)\n    ], 6),\n    withDirectives(createElementVNode(\"div\", {\n      ref: \"resizeProxy\",\n      class: normalizeClass(_ctx.ns.e(\"column-resize-proxy\"))\n    }, null, 2), [\n      [vShow, _ctx.resizeProxyVisible]\n    ])\n  ], 46, _hoisted_1);\n}\nvar Table = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue\"]]);\n\nexport { Table as default };\n//# sourceMappingURL=table.mjs.map\n","start":1680878572336,"end":1680878573016}]}
