{"resolvedId":"D:/360MoveData/Users/28546/Desktop/VSCode/ts/life/node_modules/.store/element-plus@2.3.2/node_modules/element-plus/es/hooks/use-throttle-render/index.mjs","transforms":[{"name":"vite:load-fallback","result":"import { ref, onMounted, watch } from 'vue';\n\nconst useThrottleRender = (loading, throttle = 0) => {\n  if (throttle === 0)\n    return loading;\n  const throttled = ref(false);\n  let timeoutHandle = 0;\n  const dispatchThrottling = () => {\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle);\n    }\n    timeoutHandle = window.setTimeout(() => {\n      throttled.value = loading.value;\n    }, throttle);\n  };\n  onMounted(dispatchThrottling);\n  watch(() => loading.value, (val) => {\n    if (val) {\n      dispatchThrottling();\n    } else {\n      throttled.value = val;\n    }\n  });\n  return throttled;\n};\n\nexport { useThrottleRender };\n//# sourceMappingURL=index.mjs.map\n","start":1680879309858,"end":1680879310067}]}
